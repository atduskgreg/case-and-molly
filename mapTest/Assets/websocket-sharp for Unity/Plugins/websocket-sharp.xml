<?xml version="1.0"?>
<doc>
    <assembly>
        <name>websocket-sharp</name>
    </assembly>
    <members>
        <member name="T:WebSocketSharp.Ext">
            <summary>
            Provides a set of static methods for the websocket-sharp.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Ext.Contains(System.String,System.Char[])">
            <summary>
            Determines whether the specified <see cref="T:System.String" /> contains any of characters
            in the specified array of <see cref="T:System.Char" />.
            </summary>
            <returns>
                <c>true</c> if <paramref name="value" /> contains any of <paramref name="chars" />; otherwise, <c>false</c>.
            </returns>
            <param name="value">
            A <see cref="T:System.String" /> to test.
            </param>
            <param name="chars">
            An array of <see cref="T:System.Char" /> that contains characters to find.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Contains(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.Collections.Specialized.NameValueCollection" /> contains the entry
            with the specified <paramref name="name" />.
            </summary>
            <returns>
                <c>true</c> if <paramref name="collection" /> contains the entry with <paramref name="name" />;
            otherwise, <c>false</c>.
            </returns>
            <param name="collection">
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the entries.
            </param>
            <param name="name">
            A <see cref="T:System.String" /> that contains the key of the entry to find.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Contains(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.Collections.Specialized.NameValueCollection" /> contains the entry
            with the specified both <paramref name="name" /> and <paramref name="value" />.
            </summary>
            <returns>
                <c>true</c> if <paramref name="collection" /> contains the entry with both <paramref name="name" /> and <paramref name="value" />;
            otherwise, <c>false</c>.
            </returns>
            <param name="collection">
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the entries.
            </param>
            <param name="name">
            A <see cref="T:System.String" /> that contains the key of the entry to find.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the entry to find.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Emit(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            Emit the specified <see cref="T:System.EventHandler" /> delegate if is not <see langword="null" />.
            </summary>
            <param name="eventHandler">
            An <see cref="T:System.EventHandler" /> to emit.
            </param>
            <param name="sender">
            An <see cref="T:System.Object" /> that emits the <paramref name="eventHandler" />.
            </param>
            <param name="e">
            An <see cref="T:System.EventArgs" /> that contains no event data.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Emit``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Emit the specified <b>EventHandler&lt;TEventArgs&gt;</b> delegate if is not <see langword="null" />.
            </summary>
            <param name="eventHandler">
            An <b>EventHandler&lt;TEventArgs&gt;</b> to emit.
            </param>
            <param name="sender">
            An <see cref="T:System.Object" /> that emits the <paramref name="eventHandler" />.
            </param>
            <param name="e">
            A <b>TEventArgs</b> that contains the event data.
            </param>
            <typeparam name="TEventArgs">
            The type of the event data generated by the event.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.GetAbsolutePath(System.Uri)">
            <summary>
            Gets the absolute path from the specified <see cref="T:System.Uri" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that contains the absolute path if got successfully; otherwise, <see langword="null" />.
            </returns>
            <param name="uri">
            A <see cref="T:System.Uri" /> that contains the URI to get the absolute path from.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetCookies(System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            Gets the collection of cookies from the specified <see cref="T:System.Collections.Specialized.NameValueCollection" />.
            </summary>
            <returns>
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that receives a collection of the HTTP Cookies.
            </returns>
            <param name="headers">
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains a collection of the HTTP Headers.
            </param>
            <param name="response">
                <c>true</c> if gets from the response <paramref name="headers" />;
            from the request <paramref name="headers" />, <c>false</c>.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetDescription(WebSocketSharp.Net.HttpStatusCode)">
            <summary>
            Gets the description of the HTTP status code using the specified <see cref="T:WebSocketSharp.Net.HttpStatusCode" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that contains the description of the HTTP status code.
            </returns>
            <param name="code">
            One of <see cref="T:WebSocketSharp.Net.HttpStatusCode" /> values that contains an HTTP status code.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetName(System.String,System.String)">
            <summary>
            Gets the name from the specified <see cref="T:System.String" /> that contains a pair of name and value
            separated by a separator string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that contains the name if any; otherwise, <c>null</c>.
            </returns>
            <param name="nameAndValue">
            A <see cref="T:System.String" /> that contains a pair of name and value separated by a separator string.
            </param>
            <param name="separator">
            A <see cref="T:System.String" /> that contains a separator string.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetNameAndValue(System.String,System.String)">
            <summary>
            Gets the name and value from the specified <see cref="T:System.String" /> that contains a pair of name and value are separated by a separator string.
            </summary>
            <returns>
            A <b>KeyValuePair&lt;string, string&gt;</b> that contains the name and value if any.
            </returns>
            <param name="nameAndValue">
            A <see cref="T:System.String" /> that contains a pair of name and value are separated by a separator string.
            </param>
            <param name="separator">
            A <see cref="T:System.String" /> that contains a separator string.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetStatusDescription(System.Int32)">
            <summary>
            Gets the description of the HTTP status code using the specified <see cref="T:System.Int32" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that contains the description of the HTTP status code.
            </returns>
            <param name="code">
            An <see cref="T:System.Int32" /> that contains an HTTP status code.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetValue(System.String,System.String)">
            <summary>
            Gets the value from the specified <see cref="T:System.String" /> that contains a pair of name and value
            separated by a separator string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that contains the value if any; otherwise, <c>null</c>.
            </returns>
            <param name="nameAndValue">
            A <see cref="T:System.String" /> that contains a pair of name and value separated by a separator string.
            </param>
            <param name="separator">
            A <see cref="T:System.String" /> that contains a separator string.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsCloseStatusCode(System.UInt16)">
            <summary>
            Determines whether the specified <see cref="T:System.UInt16" /> is in the allowable range of
            the WebSocket close status code.
            </summary>
            <remarks>
            Not allowable ranges are the followings.
            <list type="bullet"><item><term>
            Numbers in the range 0-999 are not used.
            </term></item><item><term>
            Numbers which are greater than 4999 are out of the reserved close status code ranges.
            </term></item></list></remarks>
            <returns>
                <c>true</c> if <paramref name="code" /> is in the allowable range of the WebSocket close status code; otherwise, <c>false</c>.
            </returns>
            <param name="code">
            A <see cref="T:System.UInt16" /> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsEmpty(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String" /> is empty.
            </summary>
            <returns>
                <c>true</c> if <paramref name="value" /> is empty; otherwise, <c>false</c>.
            </returns>
            <param name="value">
            A <see cref="T:System.String" /> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsEnclosedIn(System.String,System.Char)">
            <summary>
            Determines whether the specified <see cref="T:System.String" /> is enclosed in the specified <see cref="T:System.Char" />.
            </summary>
            <returns>
                <c>true</c> if <paramref name="value" /> is enclosed in <paramref name="c" />; otherwise, <c>false</c>.
            </returns>
            <param name="value">
            A <see cref="T:System.String" /> to test.
            </param>
            <param name="c">
            A <see cref="T:System.Char" /> that contains character to find.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsHostOrder(WebSocketSharp.ByteOrder)">
            <summary>
            Determines whether the specified <see cref="T:WebSocketSharp.ByteOrder" /> is host (this computer architecture) byte order.
            </summary>
            <returns>
                <c>true</c> if the <paramref name="order" /> parameter is host byte order; otherwise, <c>false</c>.
            </returns>
            <param name="order">
            A <see cref="T:WebSocketSharp.ByteOrder" /> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsLocal(System.Net.IPAddress)">
            <summary>
            Determines whether the specified <see cref="T:System.Net.IPAddress" /> represents a local IP address.
            </summary>
            <returns>
                <c>true</c> if <paramref name="address" /> represents a local IP address; otherwise, <c>false</c>.
            </returns>
            <param name="address">
            A <see cref="T:System.Net.IPAddress" /> to test.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="address" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.IsNullOrEmpty(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String" /> is <see langword="null" /> or empty.
            </summary>
            <returns>
                <c>true</c> if the <paramref name="value" /> parameter is <see langword="null" /> or empty; otherwise, <c>false</c>.
            </returns>
            <param name="value">
            A <see cref="T:System.String" /> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsPredefinedScheme(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String" /> is predefined scheme.
            </summary>
            <returns>
                <c>true</c> if the <paramref name="scheme" /> parameter is the predefined scheme; otherwise, <c>false</c>.
            </returns>
            <param name="scheme">
            A <see cref="T:System.String" /> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsUpgradeTo(WebSocketSharp.Net.HttpListenerRequest,System.String)">
            <summary>
            Determines whether the specified <see cref="T:WebSocketSharp.Net.HttpListenerRequest" /> is the HTTP Upgrade request
            to switch to the specified <paramref name="protocol" />.
            </summary>
            <returns>
                <c>true</c> if the specified <see cref="T:WebSocketSharp.Net.HttpListenerRequest" /> is the HTTP Upgrade request
            to switch to the specified <paramref name="protocol" />; otherwise, <c>false</c>.
            </returns>
            <param name="request">
            A <see cref="T:WebSocketSharp.Net.HttpListenerRequest" /> that contains an HTTP request information.
            </param>
            <param name="protocol">
            A <see cref="T:System.String" /> that contains a protocol name.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <para>
                    <paramref name="request" /> is <see langword="null" />.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="protocol" /> is <see langword="null" />.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="protocol" /> is <see cref="F:System.String.Empty" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.IsValidAbsolutePath(System.String,System.String@)">
            <summary>
            Determines whether the specified <see cref="T:System.String" /> is valid absolute path.
            </summary>
            <returns>
                <c>true</c> if the <paramref name="absPath" /> parameter is valid absolute path; otherwise, <c>false</c>.
            </returns>
            <param name="absPath">
            A <see cref="T:System.String" /> to test.
            </param>
            <param name="message">
            A <see cref="T:System.String" /> that receives a message if the <paramref name="absPath" /> is invalid.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.MaybeUri(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String" /> is a URI string.
            </summary>
            <returns>
                <c>true</c> if the <paramref name="uriString" /> parameter is maybe a URI string; otherwise, <c>false</c>.
            </returns>
            <param name="uriString">
            A <see cref="T:System.String" /> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.ReadBytes(System.IO.Stream,System.Int32)">
            <summary>
            Reads a block of bytes from the specified <see cref="T:System.IO.Stream" />
            and returns the read data in an array of <see cref="T:System.Byte" />.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte" /> that receives the read data.
            </returns>
            <param name="stream">
            A <see cref="T:System.IO.Stream" /> that contains the data to read.
            </param>
            <param name="length">
            An <see cref="T:System.Int32" /> that contains the number of bytes to read.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.ReadBytes(System.IO.Stream,System.Int64)">
            <summary>
            Reads a block of bytes from the specified <see cref="T:System.IO.Stream" />
            and returns the read data in an array of <see cref="T:System.Byte" />.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte" /> that receives the read data.
            </returns>
            <param name="stream">
            A <see cref="T:System.IO.Stream" /> that contains the data to read.
            </param>
            <param name="length">
            A <see cref="T:System.Int64" /> that contains the number of bytes to read.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.SubArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            Retrieves a sub-array from the specified <paramref name="array" />. A sub-array starts at the specified element position.
            </summary>
            <returns>
            An array of T that receives a sub-array, or an empty array of T if any problems with the parameters.
            </returns>
            <param name="array">
            An array of T that contains the data to retrieve a sub-array.
            </param>
            <param name="startIndex">
            An <see cref="T:System.Int32" /> that contains the zero-based starting position of a sub-array in the <paramref name="array" />.
            </param>
            <param name="length">
            An <see cref="T:System.Int32" /> that contains the number of elements to retrieve a sub-array.
            </param>
            <typeparam name="T">
            The type of elements in the <paramref name="array" />.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int32,System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            An <see cref="T:System.Int32" /> is the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:System.Action" /> delegate that references the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int64,System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            A <see cref="T:System.Int64" /> is the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:System.Action" /> delegate that references the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt32,System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt32" /> is the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:System.Action" /> delegate that references the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt64,System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt64" /> is the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:System.Action" /> delegate that references the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int32,System.Action{System.Int32})">
            <summary>
            Executes the specified <b>Action&lt;int&gt;</b> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            An <see cref="T:System.Int32" /> is the number of times to execute.
            </param>
            <param name="act">
            An <b>Action&lt;int&gt;</b> delegate that references the method(s) to execute.
            An <see cref="T:System.Int32" /> parameter to pass to the method(s) is the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int64,System.Action{System.Int64})">
            <summary>
            Executes the specified <b>Action&lt;long&gt;</b> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            A <see cref="T:System.Int64" /> is the number of times to execute.
            </param>
            <param name="act">
            An <b>Action&lt;long&gt;</b> delegate that references the method(s) to execute.
            A <see cref="T:System.Int64" /> parameter to pass to the method(s) is the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt32,System.Action{System.UInt32})">
            <summary>
            Executes the specified <b>Action&lt;uint&gt;</b> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt32" /> is the number of times to execute.
            </param>
            <param name="act">
            An <b>Action&lt;uint&gt;</b> delegate that references the method(s) to execute.
            A <see cref="T:System.UInt32" /> parameter to pass to the method(s) is the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt64,System.Action{System.UInt64})">
            <summary>
            Executes the specified <b>Action&lt;ulong&gt;</b> delegate <paramref name="n" /> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt64" /> is the number of times to execute.
            </param>
            <param name="act">
            An <b>Action&lt;ulong&gt;</b> delegate that references the method(s) to execute.
            A <see cref="T:System.UInt64" /> parameter to pass to this method(s) is the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.To``1(System.Byte[],WebSocketSharp.ByteOrder)">
            <summary>
            Converts the specified array of <see cref="T:System.Byte" /> to the specified type data.
            </summary>
            <returns>
            A T converted from <paramref name="src" />, or a default value of T
            if <paramref name="src" /> is an empty array of <see cref="T:System.Byte" />
            or if the type of T isn't <see cref="T:System.Boolean" />, <see cref="T:System.Char" />, <see cref="T:System.Double" />,
            <see cref="T:System.Single" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Int16" />,
            <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" /> or <see cref="T:System.UInt16" />.
            </returns>
            <param name="src">
            An array of <see cref="T:System.Byte" /> to convert.
            </param>
            <param name="srcOrder">
            A <see cref="T:WebSocketSharp.ByteOrder" /> that indicates the byte order of <paramref name="src" />.
            </param>
            <typeparam name="T">
            The type of the return. The T must be a value type.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="src" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.ToByteArray``1(``0,WebSocketSharp.ByteOrder)">
            <summary>
            Converts the specified <paramref name="value" /> to an array of <see cref="T:System.Byte" />.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte" /> converted from <paramref name="value" />.
            </returns>
            <param name="value">
            A T to convert.
            </param>
            <param name="order">
            A <see cref="T:WebSocketSharp.ByteOrder" /> that indicates the byte order of the return.
            </param>
            <typeparam name="T">
            The type of <paramref name="value" />. The T must be a value type.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.ToHostOrder(System.Byte[],WebSocketSharp.ByteOrder)">
            <summary>
            Converts the order of the specified array of <see cref="T:System.Byte" /> to the host byte order.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte" /> converted from <paramref name="src" />.
            </returns>
            <param name="src">
            An array of <see cref="T:System.Byte" /> to convert.
            </param>
            <param name="srcOrder">
            A <see cref="T:WebSocketSharp.ByteOrder" /> that indicates the byte order of <paramref name="src" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="src" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.ToString``1(``0[],System.String)">
            <summary>
            Converts the specified <paramref name="array" /> to a <see cref="T:System.String" /> that concatenates
            the each element of <paramref name="array" /> across the specified <paramref name="separator" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> converted from <paramref name="array" />, or a <see cref="F:System.String.Empty" />
            if the length of <paramref name="array" /> is zero.
            </returns>
            <param name="array">
            An array of T to convert.
            </param>
            <param name="separator">
            A <see cref="T:System.String" /> that contains a separator string.
            </param>
            <typeparam name="T">
            The type of elements in <paramref name="array" />.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.ToUri(System.String)">
            <summary>
            Converts the specified <see cref="T:System.String" /> to a <see cref="T:System.Uri" /> object.
            </summary>
            <returns>
            A <see cref="T:System.Uri" /> converted from the <paramref name="uriString" /> parameter, or <see langword="null" />
            if the <paramref name="uriString" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </returns>
            <param name="uriString">
            A <see cref="T:System.String" /> to convert.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.TryCreateWebSocketUri(System.String,System.Uri@,System.String@)">
            <summary>
            Tries to create a new WebSocket <see cref="T:System.Uri" /> using the specified <paramref name="uriString" />.
            </summary>
            <returns>
                <c>true</c> if the WebSocket <see cref="T:System.Uri" /> was successfully created; otherwise, <c>false</c>.
            </returns>
            <param name="uriString">
            A <see cref="T:System.String" /> that contains a WebSocket URI.
            </param>
            <param name="result">
            When this method returns, contains a created WebSocket <see cref="T:System.Uri" /> if the <paramref name="uriString" /> parameter is valid WebSocket URI; otherwise, <see langword="null" />.
            </param>
            <param name="message">
            When this method returns, contains a error message <see cref="T:System.String" /> if the <paramref name="uriString" /> parameter is invalid WebSocket URI; otherwise, <c>String.Empty</c>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="uriString" /> parameter passed to a method is invalid because it is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.UrlDecode(System.String)">
            <summary>
            URL-decodes the specified <see cref="T:System.String" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that receives a decoded string, or the <paramref name="s" /> parameter
            if the <paramref name="s" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </returns>
            <param name="s">
            A <see cref="T:System.String" /> to decode.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.UrlEncode(System.String)">
            <summary>
            URL-encodes the specified <see cref="T:System.String" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that receives a encoded string, or the <paramref name="s" /> parameter
            if the <paramref name="s" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </returns>
            <param name="s">
            A <see cref="T:System.String" /> to encode.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.WriteContent(WebSocketSharp.Net.HttpListenerResponse,System.Byte[])">
            <summary>
            Writes the specified content data using the specified <see cref="T:WebSocketSharp.Net.HttpListenerResponse" />.
            </summary>
            <param name="response">
            A <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> that contains a network stream to write a content data.
            </param>
            <param name="content">
            An array of <see cref="T:System.Byte" /> that contains a content data to write.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="response" /> parameter passed to a method is invalid because it is <see langword="null" />.
            </exception>
        </member>
        <member name="T:WebSocketSharp.WsState">
            <summary>
            Contains the values of the state of the WebSocket connection.
            </summary>
            <remarks>
            The <b>WsState</b> enumeration contains the values of the state of the WebSocket connection defined in
            <a href="http://www.w3.org/TR/websockets/#dom-websocket-readystate">The WebSocket API</a>.
            </remarks>
        </member>
        <member name="F:WebSocketSharp.WsState.CONNECTING">
            <summary>
            Equivalent to numeric value 0. Indicates that the connection has not yet been established.
            </summary>
        </member>
        <member name="F:WebSocketSharp.WsState.OPEN">
            <summary>
            Equivalent to numeric value 1. Indicates that the connection is established and communication is possible.
            </summary>
        </member>
        <member name="F:WebSocketSharp.WsState.CLOSING">
            <summary>
            Equivalent to numeric value 2. Indicates that the connection is going through the closing handshake, or the <b>Close</b> method has been invoked.
            </summary>
        </member>
        <member name="F:WebSocketSharp.WsState.CLOSED">
            <summary>
            Equivalent to numeric value 3. Indicates that the connection has been closed or could not be opened.
            </summary>
        </member>
        <member name="T:WebSocketSharp.MessageEventArgs">
            <summary>
            Contains the event data associated with a <see cref="E:WebSocketSharp.WebSocket.OnMessage" /> event.
            </summary>
            <remarks>
            The <see cref="E:WebSocketSharp.WebSocket.OnMessage" /> event occurs when the WebSocket receives a text or binary data frame.
            If you want to get the received data, you should access the <see cref="P:WebSocketSharp.MessageEventArgs.Data" /> or
            <see cref="P:WebSocketSharp.MessageEventArgs.RawData" /> properties.
            </remarks>
        </member>
        <member name="P:WebSocketSharp.MessageEventArgs.Data">
            <summary>
            Gets the received data as a <see cref="T:System.String" />.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the received data.
            </value>
        </member>
        <member name="P:WebSocketSharp.MessageEventArgs.RawData">
            <summary>
            Gets the received data as an array of <see cref="T:System.Byte" />.
            </summary>
            <value>
            An array of <see cref="T:System.Byte" /> that contains the received data.
            </value>
        </member>
        <member name="P:WebSocketSharp.MessageEventArgs.Type">
            <summary>
            Gets the type of the received data.
            </summary>
            <value>
            One of the <see cref="T:WebSocketSharp.Opcode" /> values that indicates the type of the received data.
            </value>
        </member>
        <member name="T:WebSocketSharp.CloseEventArgs">
            <summary>
            Contains the event data associated with a <see cref="E:WebSocketSharp.WebSocket.OnClose" /> event.
            </summary>
            <remarks>
            The <see cref="E:WebSocketSharp.WebSocket.OnClose" /> event occurs when the WebSocket receives a close control frame or
            the <c>WebSocket.Close</c> method is called. If you want to get the reason for closure, you should access
            the <see cref="P:WebSocketSharp.CloseEventArgs.Code" /> or <see cref="P:WebSocketSharp.CloseEventArgs.Reason" /> properties.
            </remarks>
        </member>
        <member name="P:WebSocketSharp.CloseEventArgs.Code">
            <summary>
            Gets the status code for closure.
            </summary>
            <value>
            A <see cref="T:System.UInt16" /> that contains a status code for closure.
            </value>
        </member>
        <member name="P:WebSocketSharp.CloseEventArgs.Reason">
            <summary>
            Gets the reason for closure.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a reason for closure.
            </value>
        </member>
        <member name="P:WebSocketSharp.CloseEventArgs.WasClean">
            <summary>
            Indicates whether the WebSocket connection closed cleanly.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection closed cleanly; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:WebSocketSharp.ByteOrder">
            <summary>
            Contains the values that indicate whether the byte order is a Little-endian or Big-endian.
            </summary>
        </member>
        <member name="F:WebSocketSharp.ByteOrder.LITTLE">
            <summary>
            Indicates a Little-endian.
            </summary>
        </member>
        <member name="F:WebSocketSharp.ByteOrder.BIG">
            <summary>
            Indicates a Big-endian.
            </summary>
        </member>
        <member name="T:WebSocketSharp.ErrorEventArgs">
            <summary>
            Contains the event data associated with a error event.
            </summary>
            <remarks>
            The error event occurs when this event sender gets an error.
            If you want to get the error message, you should access the <see cref="P:WebSocketSharp.ErrorEventArgs.Message" /> property.
            </remarks>
        </member>
        <member name="P:WebSocketSharp.ErrorEventArgs.Message">
            <summary>
            Gets the error message.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a error message.
            </value>
        </member>
        <member name="T:WebSocketSharp.WebSocket">
            <summary>
            Implements the WebSocket interface.
            </summary>
            <remarks>
            The WebSocket class provides a set of methods and properties for two-way communication
            using the WebSocket protocol (<see href="http://tools.ietf.org/html/rfc6455">RFC 6455</see>).
            </remarks>
        </member>
        <member name="M:WebSocketSharp.WebSocket.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.WebSocket" /> class with the specified WebSocket URL
            and subprotocols.
            </summary>
            <param name="url">
            A <see cref="T:System.String" /> that contains a WebSocket URL to connect.
            </param>
            <param name="protocols">
            An array of <see cref="T:System.String" /> that contains the WebSocket subprotocols if any.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="url" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="url" /> is not valid WebSocket URL.
            </exception>
        </member>
        <member name="M:WebSocketSharp.WebSocket.#ctor(System.String,System.EventHandler,System.EventHandler{WebSocketSharp.MessageEventArgs},System.EventHandler{WebSocketSharp.ErrorEventArgs},System.EventHandler{WebSocketSharp.CloseEventArgs},System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.WebSocket" /> class with the specified WebSocket URL,
            OnOpen, OnMessage, OnError, OnClose event handlers and subprotocols.
            </summary>
            <remarks>
            This constructor initializes a new instance of the <see cref="T:WebSocketSharp.WebSocket" /> class and
            establishes a WebSocket connection.
            </remarks>
            <param name="url">
            A <see cref="T:System.String" /> that contains a WebSocket URL to connect.
            </param>
            <param name="onOpen">
            An <see cref="E:WebSocketSharp.WebSocket.OnOpen" /> event handler.
            </param>
            <param name="onMessage">
            An <see cref="E:WebSocketSharp.WebSocket.OnMessage" /> event handler.
            </param>
            <param name="onError">
            An <see cref="E:WebSocketSharp.WebSocket.OnError" /> event handler.
            </param>
            <param name="onClose">
            An <see cref="E:WebSocketSharp.WebSocket.OnClose" /> event handler.
            </param>
            <param name="protocols">
            An array of <see cref="T:System.String" /> that contains the WebSocket subprotocols if any.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="url" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="url" /> is not valid WebSocket URL.
            </exception>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnClose">
            <summary>
            Occurs when the <see cref="T:WebSocketSharp.WebSocket" /> receives a Close frame or the Close method is called.
            </summary>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnError">
            <summary>
            Occurs when the <see cref="T:WebSocketSharp.WebSocket" /> gets an error.
            </summary>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnMessage">
            <summary>
            Occurs when the <see cref="T:WebSocketSharp.WebSocket" /> receives a data frame.
            </summary>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnOpen">
            <summary>
            Occurs when the WebSocket connection has been established.
            </summary>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Compression">
            <summary>
            Gets or sets the compression method used to compress the payload data of the WebSocket Data frame.
            </summary>
            <value>
            One of the <see cref="T:WebSocketSharp.CompressionMethod" /> values that indicates the compression method to use.
            The default is <see cref="F:WebSocketSharp.CompressionMethod.NONE" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Cookies">
            <summary>
            Gets the cookies used in the WebSocket opening handshake.
            </summary>
            <value>
            An IEnumerable&lt;Cookie&gt; interface that provides an enumerator which supports the iteration
            over the collection of cookies.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Credentials">
            <summary>
            Gets the credentials for HTTP authentication (Basic/Digest).
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.WsCredential" /> that contains the credentials for HTTP authentication.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Extensions">
            <summary>
            Gets the WebSocket extensions selected by the server.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the extensions if any. The default is <see cref="F:System.String.Empty" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.IsAlive">
            <summary>
            Gets a value indicating whether the WebSocket connection is alive.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection is alive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.IsSecure">
            <summary>
            Gets a value indicating whether the WebSocket connection is secure.
            </summary>
            <value>
                <c>true</c> if the connection is secure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Log">
            <summary>
            Gets the logging functions.
            </summary>
            <remarks>
            The default logging level is the <see cref="F:WebSocketSharp.LogLevel.ERROR" />.
            If you want to change the current logging level, you set the <c>Log.Level</c> property
            to one of the <see cref="T:WebSocketSharp.LogLevel" /> values which you want.
            </remarks>
            <value>
            A <see cref="T:WebSocketSharp.Logger" /> that provides the logging functions.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Origin">
            <summary>
            Gets or sets the value of the Origin header used in the WebSocket opening handshake.
            </summary>
            <remarks>
            A <see cref="T:WebSocketSharp.WebSocket" /> instance does not send the Origin header in the WebSocket opening handshake
            if the value of this property is <see cref="F:System.String.Empty" />.
            </remarks>
            <value>
                <para>
            A <see cref="T:System.String" /> that contains the value of the <see href="http://tools.ietf.org/html/rfc6454#section-7">HTTP Origin header</see> to send.
            The default is <see cref="F:System.String.Empty" />.
            </para>
                <para>
            The value of the Origin header has the following syntax: <c>&lt;scheme&gt;://&lt;host&gt;[:&lt;port&gt;]</c></para>
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Protocol">
            <summary>
            Gets the WebSocket subprotocol selected by the server.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the subprotocol if any. The default is <see cref="F:System.String.Empty" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.ReadyState">
            <summary>
            Gets the state of the WebSocket connection.
            </summary>
            <value>
            One of the <see cref="T:WebSocketSharp.WsState" /> values. The default is <see cref="F:WebSocketSharp.WsState.CONNECTING" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.ServerCertificateValidationCallback">
            <summary>
            Gets or sets the callback used to validate the certificate supplied by the server.
            </summary>
            <remarks>
            If the value of this property is <see langword="null" />, the validation does nothing
            with the server certificate, always returns valid.
            </remarks>
            <value>
            A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate that references the method(s)
            used to validate the server certificate. The default is <see langword="null" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Url">
            <summary>
            Gets the WebSocket URL to connect.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains the WebSocket URL to connect.
            </value>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close">
            <summary>
            Closes the WebSocket connection and releases all associated resources.
            </summary>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(System.UInt16)">
            <summary>
            Closes the WebSocket connection with the specified <paramref name="code" /> and
            releases all associated resources.
            </summary>
            <remarks>
            This Close method emits a <see cref="E:WebSocketSharp.WebSocket.OnError" /> event if <paramref name="code" /> is not
            in the allowable range of the WebSocket close status code.
            </remarks>
            <param name="code">
            A <see cref="T:System.UInt16" /> that indicates the status code for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(WebSocketSharp.CloseStatusCode)">
            <summary>
            Closes the WebSocket connection with the specified <paramref name="code" /> and
            releases all associated resources.
            </summary>
            <param name="code">
            One of the <see cref="T:WebSocketSharp.CloseStatusCode" /> values that indicates the status code for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(System.UInt16,System.String)">
            <summary>
            Closes the WebSocket connection with the specified <paramref name="code" /> and
            <paramref name="reason" />, and releases all associated resources.
            </summary>
            <remarks>
            This Close method emits a <see cref="E:WebSocketSharp.WebSocket.OnError" /> event if <paramref name="code" /> is not
            in the allowable range of the WebSocket close status code.
            </remarks>
            <param name="code">
            A <see cref="T:System.UInt16" /> that indicates the status code for closure.
            </param>
            <param name="reason">
            A <see cref="T:System.String" /> that contains the reason for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(WebSocketSharp.CloseStatusCode,System.String)">
            <summary>
            Closes the WebSocket connection with the specified <paramref name="code" /> and
            <paramref name="reason" />, and releases all associated resources.
            </summary>
            <param name="code">
            One of the <see cref="T:WebSocketSharp.CloseStatusCode" /> values that indicates the status code for closure.
            </param>
            <param name="reason">
            A <see cref="T:System.String" /> that contains the reason for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Connect">
            <summary>
            Establishes a WebSocket connection.
            </summary>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Dispose">
            <summary>
            Closes the WebSocket connection and releases all associated resources.
            </summary>
            <remarks>
            This method closes the WebSocket connection with the <see cref="F:WebSocketSharp.CloseStatusCode.AWAY" />.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Ping">
            <summary>
            Sends a Ping using the WebSocket connection.
            </summary>
            <returns>
                <c>true</c> if a <see cref="T:WebSocketSharp.WebSocket" /> instance receives a Pong in a time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Ping(System.String)">
            <summary>
            Sends a Ping with the specified <paramref name="message" /> using the WebSocket connection.
            </summary>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to send with a Ping.
            </param>
            <returns>
                <c>true</c> if a <see cref="T:WebSocketSharp.WebSocket" /> instance receives a Pong in a time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Send(System.Byte[])">
            <summary>
            Sends a binary <paramref name="data" /> using the WebSocket connection.
            </summary>
            <param name="data">
            An array of <see cref="T:System.Byte" /> that contains a binary data to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Send(System.String)">
            <summary>
            Sends a text <paramref name="data" /> using the WebSocket connection.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> that contains a text data to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Send(System.IO.FileInfo)">
            <summary>
            Sends a binary data using the WebSocket connection.
            </summary>
            <param name="file">
            A <see cref="T:System.IO.FileInfo" /> that contains a binary data to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SendAsync(System.Byte[],System.Action)">
            <summary>
            Sends a binary <paramref name="data" /> asynchronously using the WebSocket connection.
            </summary>
            <param name="data">
            An array of <see cref="T:System.Byte" /> that contains a binary data to send.
            </param>
            <param name="completed">
            An <see cref="T:System.Action" /> delegate that references the method(s) called when
            the asynchronous operation completes.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SendAsync(System.String,System.Action)">
            <summary>
            Sends a text <paramref name="data" /> asynchronously using the WebSocket connection.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> that contains a text data to send.
            </param>
            <param name="completed">
            An <see cref="T:System.Action" /> delegate that references the method(s) called when
            the asynchronous operation completes.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SendAsync(System.IO.FileInfo,System.Action)">
            <summary>
            Sends a binary data asynchronously using the WebSocket connection.
            </summary>
            <param name="file">
            A <see cref="T:System.IO.FileInfo" /> that contains a binary data to send.
            </param>
            <param name="completed">
            An <see cref="T:System.Action" /> delegate that references the method(s) called when
            the asynchronous operation completes.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SetCookie(WebSocketSharp.Net.Cookie)">
            <summary>
            Sets a <see cref="T:WebSocketSharp.Net.Cookie" /> used in the WebSocket opening handshake.
            </summary>
            <param name="cookie">
            A <see cref="T:WebSocketSharp.Net.Cookie" /> that contains an HTTP Cookie to set.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SetCredentials(System.String,System.String,System.Boolean)">
            <summary>
            Sets the credentials for HTTP authentication (Basic/Digest).
            </summary>
            <param name="userName">
            A <see cref="T:System.String" /> that contains a user name associated with the credentials.
            </param>
            <param name="password">
            A <see cref="T:System.String" /> that contains a password for <paramref name="userName" /> associated with the credentials.
            </param>
            <param name="preAuth">
                <c>true</c> if sends the credentials as a Basic authorization with the first request handshake;
            otherwise, <c>false</c>.
            </param>
        </member>
        <member name="T:WebSocketSharp.Server.WebSocketServer">
            <summary>
            Provides the functions of the server that receives the WebSocket connection requests.
            </summary>
            <remarks>
            The WebSocketServer class provides the multi WebSocket service.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServer" /> class.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServer" /> class that listens for incoming connection attempts
            on the specified <paramref name="port" />.
            </summary>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServer" /> class that listens for incoming connection attempts
            on the specified WebSocket URL.
            </summary>
            <param name="url">
            A <see cref="T:System.String" /> that contains a WebSocket URL.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServer" /> class that listens for incoming connection attempts
            on the specified <paramref name="port" /> and <paramref name="secure" />.
            </summary>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="secure">
            A <see cref="T:System.Boolean" /> that indicates providing a secure connection or not. (<c>true</c> indicates providing a secure connection.)
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServer" /> class that listens for incoming connection attempts
            on the specified <paramref name="address" /> and <paramref name="port" />.
            </summary>
            <param name="address">
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </param>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.#ctor(System.Net.IPAddress,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServer" /> class that listens for incoming connection attempts
            on the specified <paramref name="address" />, <paramref name="port" /> and <paramref name="secure" />.
            </summary>
            <param name="address">
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </param>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="secure">
            A <see cref="T:System.Boolean" /> that indicates providing a secure connection or not. (<c>true</c> indicates providing a secure connection.)
            </param>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServer.KeepClean">
            <summary>
            Gets or sets a value indicating whether the server cleans up the inactive WebSocket service
            instances periodically.
            </summary>
            <value>
                <c>true</c> if the server cleans up the inactive WebSocket service instances every 60 seconds;
            otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServer.ServicePaths">
            <summary>
            Gets the collection of paths associated with the every WebSocket services that the server provides.
            </summary>
            <value>
            An IEnumerable&lt;string&gt; that contains the collection of paths.
            </value>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.AcceptWebSocket(WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext)">
            <summary>
            Accepts a WebSocket connection request.
            </summary>
            <param name="context">
            A <see cref="T:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext" /> that contains the WebSocket connection request objects.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.AddWebSocketService``1(System.String)">
            <summary>
            Adds the specified type WebSocket service.
            </summary>
            <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path associated with the WebSocket service.
            </param>
            <typeparam name="T">
            The type of the WebSocket service. The T must inherit the <see cref="T:WebSocketSharp.Server.WebSocketService" /> class.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.Broadcast(System.String)">
            <summary>
            Broadcasts the specified <see cref="T:System.String" /> to all clients.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> to broadcast.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServer.Stop">
            <summary>
            Stops receiving the WebSocket connection requests.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Server.WebSocketService">
            <summary>
            Provides the basic functions of the WebSocket service.
            </summary>
            <remarks>
            The WebSocketService class is an abstract class.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> class.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketService.Log">
            <summary>
            Gets or sets the logging functions.
            </summary>
            <remarks>
            If you wanted to change the current logger to the service own logger, you would set this property
            to a new <see cref="T:WebSocketSharp.Logger" /> instance that you created.
            </remarks>
            <value>
            A <see cref="T:WebSocketSharp.Logger" /> that provides the logging functions.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketService.QueryString">
            <summary>
            Gets the collection of query string variables used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the collection of query string variables.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketService.Sessions">
            <summary>
            Gets the sessions to the <see cref="T:WebSocketSharp.Server.WebSocketService" />.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" /> that contains the sessions to the the <see cref="T:WebSocketSharp.Server.WebSocketService" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketService.ID">
            <summary>
            Gets the ID of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains an ID.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketService.IsBound">
            <summary>
            Gets a value indicating whether the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance is bound to a <see cref="T:WebSocketSharp.WebSocket" />.
            </summary>
            <value>
                <c>true</c> if the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance is bound to a <see cref="T:WebSocketSharp.WebSocket" />; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.OnClose(WebSocketSharp.CloseEventArgs)">
            <summary>
            Occurs when the inner <see cref="T:WebSocketSharp.WebSocket" /> receives a Close frame or the Stop method is called.
            </summary>
            <param name="e">
            A <see cref="T:WebSocketSharp.CloseEventArgs" /> that contains the event data associated with a <see cref="E:WebSocketSharp.WebSocket.OnClose" /> event.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.OnError(WebSocketSharp.ErrorEventArgs)">
            <summary>
            Occurs when the inner <see cref="T:WebSocketSharp.WebSocket" /> gets an error.
            </summary>
            <param name="e">
            An <see cref="T:WebSocketSharp.ErrorEventArgs" /> that contains the event data associated with a <see cref="E:WebSocketSharp.WebSocket.OnError" /> event.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.OnMessage(WebSocketSharp.MessageEventArgs)">
            <summary>
            Occurs when the inner <see cref="T:WebSocketSharp.WebSocket" /> receives a data frame.
            </summary>
            <param name="e">
            A <see cref="T:WebSocketSharp.MessageEventArgs" /> that contains the event data associated with a <see cref="E:WebSocketSharp.WebSocket.OnMessage" /> event.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.OnOpen">
            <summary>
            Occurs when the WebSocket connection has been established.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.ProcessCookies(WebSocketSharp.Net.CookieCollection,WebSocketSharp.Net.CookieCollection)">
            <summary>
            Processes the cookies used in the WebSocket opening handshake.
            </summary>
            <returns>
                <c>true</c> if processing the cookies is successfully; otherwise, <c>false</c>.
            </returns>
            <param name="request">
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains a collection of the HTTP Cookies received from the client.
            </param>
            <param name="response">
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains a collection of the HTTP Cookies to send to the client.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Broadcast(System.Byte[])">
            <summary>
            Broadcasts the specified array of <see cref="T:System.Byte" /> to the clients of every <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            in the <see cref="P:WebSocketSharp.Server.WebSocketService.Sessions" />.
            </summary>
            <param name="data">
            An array of <see cref="T:System.Byte" /> to broadcast.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Broadcast(System.String)">
            <summary>
            Broadcasts the specified <see cref="T:System.String" /> to the clients of every <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            in the <see cref="P:WebSocketSharp.Server.WebSocketService.Sessions" />.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> to broadcast.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Broadping">
            <summary>
            Pings to the clients of every <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            in the <see cref="P:WebSocketSharp.Server.WebSocketService.Sessions" />.
            </summary>
            <returns>
            A Dictionary&lt;string, bool&gt; that contains the collection of IDs and values
            indicating whether each <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances received a Pong in a time.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Broadping(System.String)">
            <summary>
            Pings with the specified <see cref="T:System.String" /> to the clients of every <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            in the <see cref="P:WebSocketSharp.Server.WebSocketService.Sessions" />.
            </summary>
            <returns>
            A Dictionary&lt;string, bool&gt; that contains the collection of IDs and values
            indicating whether each <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances received a Pong in a time.
            </returns>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Ping">
            <summary>
            Pings to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
            <returns>
                <c>true</c> if the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance receives a Pong in a time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Ping(System.String)">
            <summary>
            Pings with the specified <see cref="T:System.String" /> to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
            <returns>
                <c>true</c> if the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance receives a Pong in a time; otherwise, <c>false</c>.
            </returns>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.PingTo(System.String)">
            <summary>
            Pings to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance
            associated with the specified <paramref name="id" />.
            </summary>
            <returns>
                <c>true</c> if the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance receives a Pong in a time; otherwise, <c>false</c>.
            </returns>
            <param name="id">
            A <see cref="T:System.String" /> that contains an ID that represents the destination for the Ping.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.PingTo(System.String,System.String)">
            <summary>
            Pings with the specified <see cref="T:System.String" /> to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance
            associated with the specified <paramref name="id" />.
            </summary>
            <returns>
                <c>true</c> if the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance receives a Pong in a time; otherwise, <c>false</c>.
            </returns>
            <param name="id">
            A <see cref="T:System.String" /> that contains an ID that represents the destination for the Ping.
            </param>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Send(System.Byte[])">
            <summary>
            Sends a binary data to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
            <param name="data">
            An array of <see cref="T:System.Byte" /> that contains a binary data to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Send(System.String)">
            <summary>
            Sends a text data to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> that contains a text data to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.SendTo(System.String,System.Byte[])">
            <summary>
            Sends a binary data to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance
            associated with the specified <paramref name="id" />.
            </summary>
            <param name="id">
            A <see cref="T:System.String" /> that contains an ID that represents the destination for the data.
            </param>
            <param name="data">
            An array of <see cref="T:System.Byte" /> that contains a binary data to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.SendTo(System.String,System.String)">
            <summary>
            Sends a text data to the client of the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance
            associated with the specified <paramref name="id" />.
            </summary>
            <param name="id">
            A <see cref="T:System.String" /> that contains an ID that represents the destination for the data.
            </param>
            <param name="data">
            A <see cref="T:System.String" /> that contains a text data to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Start">
            <summary>
            Starts the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Stop">
            <summary>
            Stops the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Stop(System.UInt16,System.String)">
            <summary>
            Stops the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance with the specified <see cref="T:System.UInt16" /> and <see cref="T:System.String" />.
            </summary>
            <param name="code">
            A <see cref="T:System.UInt16" /> that contains a status code indicating the reason for stop.
            </param>
            <param name="reason">
            A <see cref="T:System.String" /> that contains a reason for stop.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketService.Stop(WebSocketSharp.CloseStatusCode,System.String)">
            <summary>
            Stops the <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance with the specified <see cref="T:WebSocketSharp.CloseStatusCode" /> and <see cref="T:System.String" />.
            </summary>
            <param name="code">
            One of the <see cref="T:WebSocketSharp.CloseStatusCode" /> values that contains a status code indicating the reason for stop.
            </param>
            <param name="reason">
            A <see cref="T:System.String" /> that contains a reason for stop.
            </param>
        </member>
        <member name="T:WebSocketSharp.Net.AuthenticationSchemeSelector">
            <summary>
            Selects the authentication scheme for a <see cref="T:WebSocketSharp.Net.HttpListener" /> instance.
            </summary>
            <returns>
            One of the <see cref="T:WebSocketSharp.Net.AuthenticationSchemes" /> values that indicates the scheme used to authenticate the specified client request.
            </returns>
            <param name="httpRequest">
            A <see cref="T:WebSocketSharp.Net.HttpListenerRequest" /> that contains a client request information.
            </param>
        </member>
        <member name="T:WebSocketSharp.Net.AuthenticationSchemes">
            <summary>
            Contains the values of the schemes for authentication.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.AuthenticationSchemes.None">
            <summary>
            Indicates that no authentication is allowed.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.AuthenticationSchemes.Digest">
            <summary>
            Indicates digest authentication.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.AuthenticationSchemes.Negotiate">
            <summary>
            Indicates negotiating with the client to determine the authentication scheme.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.AuthenticationSchemes.Ntlm">
            <summary>
            Indicates NTLM authentication.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
            <summary>
            Indicates Windows authentication.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.AuthenticationSchemes.Basic">
            <summary>
            Indicates basic authentication.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.AuthenticationSchemes.Anonymous">
            <summary>
            Indicates anonymous authentication.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Net.Cookie">
            <summary>
            Provides a set of properties and methods used to manage an HTTP Cookie.
            </summary>
            <remarks>
                <para>
            The Cookie class supports the following cookie formats:
            <see href="http://web.archive.org/web/20020803110822/http://wp.netscape.com/newsref/std/cookie_spec.html">Netscape specification</see>,
            <see href="http://www.ietf.org/rfc/rfc2109.txt">RFC 2109</see> and
            <see href="http://www.ietf.org/rfc/rfc2965.txt">RFC 2965</see>.
            </para>
                <para>
            The Cookie class cannot be inherited.
            </para>
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Net.Cookie.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.Cookie" /> class.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.Cookie.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.Cookie" /> class
            with the specified <paramref name="name" /> and <paramref name="value" />.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the Name of the cookie.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the Value of the cookie.
            </param>
            <exception cref="T:WebSocketSharp.Net.CookieException">
                <para>
                    <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="name" /> contains an invalid character.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="value" /> is <see langword="null" />.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="value" /> contains a string not enclosed in double quotes
            that contains an invalid character.
            </para>
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.Cookie.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.Cookie" /> class
            with the specified <paramref name="name" />, <paramref name="value" /> and <paramref name="path" />.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the Name of the cookie.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the Value of the cookie.
            </param>
            <param name="path">
            A <see cref="T:System.String" /> that contains the value of the Path attribute of the cookie.
            </param>
            <exception cref="T:WebSocketSharp.Net.CookieException">
                <para>
                    <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="name" /> contains an invalid character.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="value" /> is <see langword="null" />.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="value" /> contains a string not enclosed in double quotes
            that contains an invalid character.
            </para>
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.Cookie" /> class
            with the specified <paramref name="name" />, <paramref name="value" />,
            <paramref name="path" /> and <paramref name="domain" />.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the Name of the cookie.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the Value of the cookie.
            </param>
            <param name="path">
            A <see cref="T:System.String" /> that contains the value of the Path attribute of the cookie.
            </param>
            <param name="domain">
            A <see cref="T:System.String" /> that contains the value of the Domain attribute of the cookie.
            </param>
            <exception cref="T:WebSocketSharp.Net.CookieException">
                <para>
                    <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="name" /> contains an invalid character.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="value" /> is <see langword="null" />.
            </para>
                <para>
            - or -
            </para>
                <para>
                    <paramref name="value" /> contains a string not enclosed in double quotes
            that contains an invalid character.
            </para>
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Comment">
            <summary>
            Gets or sets the value of the Comment attribute of the cookie.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a comment to document intended use of the cookie.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.CommentUri">
            <summary>
            Gets or sets the value of the CommentURL attribute of the cookie.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains a URI that provides the comment
            to document intended use of the cookie.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Discard">
            <summary>
            Gets or sets a value indicating whether the client discards the cookie unconditionally
            when the client terminates.
            </summary>
            <value>
                <c>true</c> if the client discards the cookie unconditionally when the client terminates;
            otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Domain">
            <summary>
            Gets or sets the value of the Domain attribute of the cookie.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a URI for which the cookie is valid.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Expired">
            <summary>
            Gets or sets a value indicating whether the cookie has expired.
            </summary>
            <value>
                <c>true</c> if the cookie has expired; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Expires">
            <summary>
            Gets or sets the value of the Expires attribute of the cookie.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that contains the date and time at which the cookie expires.
            The default is <see cref="F:System.DateTime.MinValue" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.HttpOnly">
            <summary>
            Gets or sets a value indicating non-HTTP APIs can access the cookie.
            </summary>
            <value>
                <c>true</c> if non-HTTP APIs can not access the cookie; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Name">
            <summary>
            Gets or sets the Name of the cookie.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the Name of the cookie.
            </value>
            <exception cref="T:WebSocketSharp.Net.CookieException">
                <para>
            The value specified for a set operation is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </para>
                <para>
            - or -
            </para>
                <para>
            The value specified for a set operation contains an invalid character.
            </para>
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Path">
            <summary>
            Gets or sets the value of the Path attribute of the cookie.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a subset of URI on the origin server
            to which the cookie applies.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Port">
            <summary>
            Gets or sets the value of the Port attribute of the cookie.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a list of the TCP ports to which the cookie applies.
            </value>
            <exception cref="T:WebSocketSharp.Net.CookieException">
            The value specified for a set operation is not enclosed in double quotes or could not be parsed.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Secure">
            <summary>
            Gets or sets a value indicating whether the security level of the cookie is secure.
            </summary>
            <remarks>
            When this property is <c>true</c>, the cookie may be included in the HTTP request
            only if the request is transmitted over the HTTPS.
            </remarks>
            <value>
                <c>true</c> if the security level of the cookie is secure; otherwise, <c>false</c>.
            The default is <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.TimeStamp">
            <summary>
            Gets the time when the cookie was issued.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that contains the time when the cookie was issued.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Value">
            <summary>
            Gets or sets the Value of the cookie.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the Value of the cookie.
            </value>
            <exception cref="T:WebSocketSharp.Net.CookieException">
                <para>
            The value specified for a set operation is <see langword="null" />.
            </para>
                <para>
            - or -
            </para>
                <para>
            The value specified for a set operation contains a string not enclosed in double quotes
            that contains an invalid character.
            </para>
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.Cookie.Version">
            <summary>
            Gets or sets the value of the Version attribute of the cookie.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that contains the version of the HTTP state management
            to which the cookie conforms.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value specified for a set operation is not allowed. The value must be 0 or 1.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.Cookie.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:WebSocketSharp.Net.Cookie" />.
            </summary>
            <param name="comparand">
            An <see cref="T:System.Object" /> to compare with the current <see cref="T:WebSocketSharp.Net.Cookie" />.
            </param>
            <returns>
                <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:WebSocketSharp.Net.Cookie" />;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Net.Cookie.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:WebSocketSharp.Net.Cookie" /> object.
            </summary>
            <returns>
            An <see cref="T:System.Int32" /> that contains a hash code for this instance.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Net.Cookie.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:WebSocketSharp.Net.Cookie" />.
            </summary>
            <remarks>
            This method returns a <see cref="T:System.String" /> to use to send an HTTP Cookie to an origin server.
            </remarks>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:WebSocketSharp.Net.Cookie" />.
            </returns>
        </member>
        <member name="T:WebSocketSharp.Net.CookieCollection">
            <summary>
            Provides a collection container for instances of the <see cref="T:WebSocketSharp.Net.Cookie" /> class.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.CookieCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.CookieCollection" /> class.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Net.CookieCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:WebSocketSharp.Net.Cookie" /> with the specified <paramref name="index" /> from the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.Cookie" /> with the specified <paramref name="index" /> in the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </value>
            <param name="index">
            An <see cref="T:System.Int32" /> is the zero-based index of the <see cref="T:WebSocketSharp.Net.Cookie" /> to find.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero or <paramref name="index" /> is greater than or
            equal to <see cref="P:WebSocketSharp.Net.CookieCollection.Count" />.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.CookieCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:WebSocketSharp.Net.Cookie" /> with the specified <paramref name="name" /> from the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.Cookie" /> with the specified <paramref name="name" /> in the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </value>
            <param name="name">
            A <see cref="T:System.String" /> is the name of the <see cref="T:WebSocketSharp.Net.Cookie" /> to find.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.CookieCollection.Count">
            <summary>
            Gets the number of cookies contained in the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that indicates the number of cookies contained in the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.CookieCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:WebSocketSharp.Net.CookieCollection" /> is read-only.
            </summary>
            <value>
                <c>true</c> if the <see cref="T:WebSocketSharp.Net.CookieCollection" /> is read-only; otherwise, <c>false</c>.
            The default is <c>true</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.CookieCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:WebSocketSharp.Net.CookieCollection" /> is thread safe.
            </summary>
            <value>
                <c>true</c> if access to the <see cref="T:WebSocketSharp.Net.CookieCollection" /> is thread safe; otherwise, <c>false</c>.
            The default is <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.CookieCollection.SyncRoot">
            <summary>
            Gets an object to use to synchronize access to the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </summary>
            <value>
            An <see cref="T:System.Object" /> to use to synchronize access to the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </value>
        </member>
        <member name="M:WebSocketSharp.Net.CookieCollection.Add(WebSocketSharp.Net.Cookie)">
            <summary>
            Add the specified <see cref="T:WebSocketSharp.Net.Cookie" /> to the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </summary>
            <param name="cookie">
            A <see cref="T:WebSocketSharp.Net.Cookie" /> to add to the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="cookie" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.CookieCollection.Add(WebSocketSharp.Net.CookieCollection)">
            <summary>
            Add the elements of the specified <see cref="T:WebSocketSharp.Net.CookieCollection" /> to the current <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </summary>
            <param name="cookies">
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> to add to the current <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="cookies" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:WebSocketSharp.Net.CookieCollection" /> to the specified <see cref="T:System.Array" />,
            starting at the specified <paramref name="index" /> in the <paramref name="array" />.
            </summary>
            <param name="array">
            An <see cref="T:System.Array" /> is the destination of the elements copied from the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </param>
            <param name="index">
            An <see cref="T:System.Int32" /> that indicates the zero-based index in <paramref name="array" /> at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="array" /> is multidimensional.
            </para>
                <para>
            -or-
            </para>
                <para>
            The number of elements in the <see cref="T:WebSocketSharp.Net.CookieCollection" /> is greater than the available space
            from index to the end of the destination <paramref name="array" />.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The elements in the <see cref="T:WebSocketSharp.Net.CookieCollection" /> cannot be cast automatically
            to the type of the destination <paramref name="array" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.CookieCollection.CopyTo(WebSocketSharp.Net.Cookie[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:WebSocketSharp.Net.CookieCollection" /> to the specified array of <see cref="T:WebSocketSharp.Net.Cookie" />,
            starting at the specified <paramref name="index" /> in the <paramref name="array" />.
            </summary>
            <param name="array">
            An array of <see cref="T:WebSocketSharp.Net.Cookie" /> is the destination of the elements copied from the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </param>
            <param name="index">
            An <see cref="T:System.Int32" /> that indicates the zero-based index in <paramref name="array" /> at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the <see cref="T:WebSocketSharp.Net.CookieCollection" /> is greater than the available space
            from index to the end of the destination <paramref name="array" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.CookieCollection.GetEnumerator">
            <summary>
            Gets the enumerator to use to iterate through the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </summary>
            <returns>
            An instance of an implementation of the <see cref="T:System.Collections.IEnumerator" /> interface
            to use to iterate through the <see cref="T:WebSocketSharp.Net.CookieCollection" />.
            </returns>
        </member>
        <member name="T:WebSocketSharp.Net.CookieException">
            <summary>
            The exception that is thrown when a <see cref="T:WebSocketSharp.Net.Cookie" /> gets an error.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.CookieException" /> class
            with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </summary>
            <param name="serializationInfo">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data.
            </param>
            <param name="streamingContext">
            A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the contextual information about the source or destination.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.CookieException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.CookieException" /> class.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the <see cref="T:WebSocketSharp.Net.CookieException" />.
            </summary>
            <param name="serializationInfo">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data.
            </param>
            <param name="streamingContext">
            A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for the serialization.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the <see cref="T:WebSocketSharp.Net.CookieException" />.
            </summary>
            <param name="serializationInfo">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data.
            </param>
            <param name="streamingContext">
            A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for the serialization.
            </param>
        </member>
        <member name="T:WebSocketSharp.Net.HttpListener">
            <summary>
            Provides a simple, programmatically controlled HTTP listener.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.HttpListener" /> class.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.AuthenticationSchemes">
            <summary>
            Gets or sets the scheme used to authenticate the clients.
            </summary>
            <value>
            One of the <see cref="T:WebSocketSharp.Net.AuthenticationSchemes" /> values that indicates the scheme used to
            authenticate the clients. The default value is <see cref="F:WebSocketSharp.Net.AuthenticationSchemes.Anonymous" />.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
            <summary>
            Gets or sets the delegate called to determine the scheme used to authenticate clients.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.AuthenticationSchemeSelector" /> delegate that invokes the method(s) used to select
            an authentication scheme. The default value is <see langword="null" />.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.IgnoreWriteExceptions">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:WebSocketSharp.Net.HttpListener" /> returns exceptions
            that occur when sending the response to the client.
            </summary>
            <value>
                <c>true</c> if does not return exceptions that occur when sending the response to the client;
            otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.IsListening">
            <summary>
            Gets a value indicating whether the <see cref="T:WebSocketSharp.Net.HttpListener" /> has been started.
            </summary>
            <value>
                <c>true</c> if the <see cref="T:WebSocketSharp.Net.HttpListener" /> has been started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.IsSupported">
            <summary>
            Gets a value indicating whether the <see cref="T:WebSocketSharp.Net.HttpListener" /> can be used with the current operating system.
            </summary>
            <value>
                <c>true</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.Prefixes">
            <summary>
            Gets the URI prefixes handled by the <see cref="T:WebSocketSharp.Net.HttpListener" />.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.Realm">
            <summary>
            Gets or sets the name of the realm associated with the <see cref="T:WebSocketSharp.Net.HttpListener" />.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the name of the realm.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
            <summary>
            Gets or sets a value indicating whether, when NTLM authentication is used,
            the authentication information of first request is used to authenticate
            additional requests on the same connection.
            </summary>
            <value>
                <c>true</c> if the authentication information of first request is used;
            otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.System#IDisposable#Dispose">
            <summary>
            Releases all resource used by the <see cref="T:WebSocketSharp.Net.HttpListener" />.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.Abort">
            <summary>
            Shuts down the <see cref="T:WebSocketSharp.Net.HttpListener" /> immediately.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
            <summary>
            Begins getting an incoming request information asynchronously.
            </summary>
            <remarks>
            This asynchronous operation must be completed by calling the <see cref="M:WebSocketSharp.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method.
            Typically, the method is invoked by the <paramref name="callback" /> delegate.
            </remarks>
            <returns>
            An <see cref="T:System.IAsyncResult" /> that contains the status of the asynchronous operation.
            </returns>
            <param name="callback">
            An <see cref="T:System.AsyncCallback" /> delegate that references the method(s)
            called when the asynchronous operation completes.
            </param>
            <param name="state">
            An <see cref="T:System.Object" /> that contains a user defined object to pass to the <paramref name="callback" /> delegate.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> has not been started or is stopped currently.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.Close">
            <summary>
            Shuts down the <see cref="T:WebSocketSharp.Net.HttpListener" />.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.EndGetContext(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get an incoming request information.
            </summary>
            <remarks>
            This method completes an asynchronous operation started by calling the <see cref="M:WebSocketSharp.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.
            </remarks>
            <returns>
            A <see cref="T:WebSocketSharp.Net.HttpListenerContext" /> that contains a client's request information.
            </returns>
            <param name="asyncResult">
            An <see cref="T:System.IAsyncResult" /> obtained by calling the <see cref="M:WebSocketSharp.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="asyncResult" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:WebSocketSharp.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The EndGetContext method was already called for the specified <paramref name="asyncResult" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.GetContext">
            <summary>
            Gets an incoming request information.
            </summary>
            <remarks>
            This method waits for an incoming request and returns the request information
            when received the request.
            </remarks>
            <returns>
            A <see cref="T:WebSocketSharp.Net.HttpListenerContext" /> that contains a client's request information.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                <para>
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> does not have any URI prefixes to listen on.
            </para>
                <para>
            -or-
            </para>
                <para>
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> has not been started or is stopped currently.
            </para>
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.Start">
            <summary>
            Starts to receive incoming requests.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListener.Stop">
            <summary>
            Stops receiving incoming requests.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            This object has been closed.
            </exception>
        </member>
        <member name="T:WebSocketSharp.Net.HttpListenerContext">
            <summary>
            Provides access to the HTTP request and response objects used by the <see cref="T:WebSocketSharp.Net.HttpListener" /> class.
            </summary>
            <remarks>
            The HttpListenerContext class cannot be inherited.
            </remarks>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerContext.Request">
            <summary>
            Gets the <see cref="T:WebSocketSharp.Net.HttpListenerRequest" /> that contains the HTTP request from a client.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.HttpListenerRequest" /> that contains the HTTP request objects.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerContext.Response">
            <summary>
            Gets the <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> that contains the HTTP response to send to
            the client in response to the client's request.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> that contains the HTTP response objects.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerContext.User">
            <summary>
            Gets the client information (identity, authentication information and security roles).
            </summary>
            <value>
            A <see cref="T:System.Security.Principal.IPrincipal" /> contains the client information.
            </value>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerContext.AcceptWebSocket">
            <summary>
            Accepts a WebSocket connection by the <see cref="T:WebSocketSharp.Net.HttpListener" />.
            </summary>
            <returns>
            A <see cref="T:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext" /> that contains a WebSocket connection.
            </returns>
        </member>
        <member name="T:WebSocketSharp.Net.HttpListenerException">
            <summary>
            The exception that is thrown when an error occurs processing an HTTP request.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.HttpListenerException" /> class.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.HttpListenerException" /> class
            with the specified <paramref name="errorCode" />.
            </summary>
            <param name="errorCode">
            An <see cref="T:System.Int32" /> that contains an error code.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.HttpListenerException" /> class
            with the specified <paramref name="errorCode" /> and <paramref name="message" />.
            </summary>
            <param name="errorCode">
            An <see cref="T:System.Int32" /> that contains an error code.
            </param>
            <param name="message">
            A <see cref="T:System.String" /> that describes the error.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.HttpListenerException" /> class
            from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.
            </summary>
            <param name="serializationInfo">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to deserialize
            the new <see cref="T:WebSocketSharp.Net.HttpListenerException" /> object.
            </param>
            <param name="streamingContext">
            A <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </param>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerException.ErrorCode">
            <summary>
            Gets a value that represents the error that occurred.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that contains an error code.
            </value>
        </member>
        <member name="T:WebSocketSharp.Net.HttpListenerPrefixCollection">
            <summary>
            Provides the collection used to store the URI prefixes for the <see cref="T:WebSocketSharp.Net.HttpListener" />.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerPrefixCollection.Count">
            <summary>
            Gets the number of prefixes contained in the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </summary>
            <value>
            A <see cref="T:System.Int32" /> that contains the number of prefixes.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerPrefixCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether access to the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is read-only.
            </summary>
            <value>
            Always returns <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerPrefixCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is synchronized.
            </summary>
            <value>
            Always returns <c>false</c>.
            </value>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an object that can be used to iterate through the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </summary>
            <returns>
            An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to
            the URI prefix strings in the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.Add(System.String)">
            <summary>
            Adds the specified <paramref name="uriPrefix" /> to the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </summary>
            <param name="uriPrefix">
            A <see cref="T:System.String" /> that contains a URI prefix to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="uriPrefix" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> associated with this <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.Clear">
            <summary>
            Removes all URI prefixes from the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> associated with this <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.Contains(System.String)">
            <summary>
            Returns a value indicating whether the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> contains
            the specified <paramref name="uriPrefix" />.
            </summary>
            <returns>
                <c>true</c> if the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> contains the specified <paramref name="uriPrefix" />;
            otherwise, <c>false</c>.
            </returns>
            <param name="uriPrefix">
            A <see cref="T:System.String" /> that contains a URI prefix to test.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="uriPrefix" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> associated with this <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the contents of the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> to the specified <see cref="T:System.Array" />.
            </summary>
            <param name="array">
            An <see cref="T:System.Array" /> that receives the URI prefix strings in the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </param>
            <param name="offset">
            An <see cref="T:System.Int32" /> that contains the zero-based index in <paramref name="array" /> at which copying begins.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> associated with this <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the contents of the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> to the specified array of <see cref="T:System.String" />.
            </summary>
            <param name="array">
            An array of <see cref="T:System.String" /> that receives the URI prefix strings in the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </param>
            <param name="offset">
            An <see cref="T:System.Int32" /> that contains the zero-based index in <paramref name="array" /> at which copying begins.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> associated with this <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.GetEnumerator">
            <summary>
            Gets an object that can be used to iterate through the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </summary>
            <returns>
            An object that implements the IEnumerator&lt;string&gt; interface and provides access to
            the URI prefix strings in the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerPrefixCollection.Remove(System.String)">
            <summary>
            Removes the specified <paramref name="uriPrefix" /> from the list of prefixes in the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />.
            </summary>
            <returns>
                <c>true</c> if the <paramref name="uriPrefix" /> was found in the <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" />
            and removed; otherwise, <c>false</c>.
            </returns>
            <param name="uriPrefix">
            A <see cref="T:System.String" /> that contains a URI prefix to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="uriPrefix" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:WebSocketSharp.Net.HttpListener" /> associated with this <see cref="T:WebSocketSharp.Net.HttpListenerPrefixCollection" /> is closed.
            </exception>
        </member>
        <member name="T:WebSocketSharp.Net.HttpListenerRequest">
            <summary>
            Provides access to a request to a <see cref="T:WebSocketSharp.Net.HttpListener" /> instance.
            </summary>
            <remarks>
            The HttpListenerRequest class cannot be inherited.
            </remarks>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.AcceptTypes">
            <summary>
            Gets the media types which are acceptable for the response.
            </summary>
            <value>
            An array of <see cref="T:System.String" /> that contains the media type names in the Accept request-header
            or <see langword="null" /> if the request did not include an Accept header.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.ClientCertificateError">
            <summary>
            Gets an error code that identifies a problem with the client's certificate.
            </summary>
            <value>
            Always returns <c>0</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.ContentEncoding">
            <summary>
            Gets the encoding used with the entity body data included in the request.
            </summary>
            <value>
            A <see cref="T:System.Text.Encoding" /> that indicates the encoding used with the entity body data
            or <see cref="P:System.Text.Encoding.Default" /> if the request did not include the information about the encoding.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.ContentLength64">
            <summary>
            Gets the size of the entity body data included in the request.
            </summary>
            <value>
            A <see cref="T:System.Int64" /> that contains the value of the Content-Length entity-header.
            The value is a number of bytes in the entity body data. <c>-1</c> if the size is not known.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.ContentType">
            <summary>
            Gets the media type of the entity body included in the request.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Content-Type entity-header.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.Cookies">
            <summary>
            Gets the cookies included in the request.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains the cookies included in the request.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.HasEntityBody">
            <summary>
            Gets a value indicating whether the request has the entity body.
            </summary>
            <value>
                <c>true</c> if the request has the entity body; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.Headers">
            <summary>
            Gets the HTTP headers used in the request.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the HTTP headers used in the request.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.HttpMethod">
            <summary>
            Gets the HTTP method used in the request.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the HTTP method used in the request.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.InputStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream" /> that contains the entity body data included in the request.
            </summary>
            <value>
            A <see cref="T:System.IO.Stream" /> that contains the entity body data included in the request.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.IsAuthenticated">
            <summary>
            Gets a value indicating whether the client that sent the request is authenticated.
            </summary>
            <value>
            Always returns <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.IsLocal">
            <summary>
            Gets a value indicating whether the request is sent from the local computer.
            </summary>
            <value>
                <c>true</c> if the request is sent from the local computer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.IsSecureConnection">
            <summary>
            Gets a value indicating whether the HTTP connection is secured using the SSL protocol.
            </summary>
            <value>
                <c>true</c> if the HTTP connection is secured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.IsWebSocketRequest">
            <summary>
            Gets a value indicating whether the request is a WebSocket connection request.
            </summary>
            <value>
                <c>true</c> if the request is a WebSocket connection request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.KeepAlive">
            <summary>
            Gets a value indicating whether the client requests a persistent connection.
            </summary>
            <value>
                <c>true</c> if the client requests a persistent connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.LocalEndPoint">
            <summary>
            Gets the server endpoint as an IP address and a port number.
            </summary>
            <value>
            A <see cref="T:System.Net.IPEndPoint" /> that contains the server endpoint.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.ProtocolVersion">
            <summary>
            Gets the HTTP version used in the request.
            </summary>
            <value>
            A <see cref="T:System.Version" /> that contains the HTTP version used in the request.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.QueryString">
            <summary>
            Gets the collection of query string variables used in the request.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the collection of query string variables used in the request.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.RawUrl">
            <summary>
            Gets the raw URL (without the scheme, host and port) requested by the client.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the raw URL requested by the client.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.RemoteEndPoint">
            <summary>
            Gets the client endpoint as an IP address and a port number.
            </summary>
            <value>
            A <see cref="T:System.Net.IPEndPoint" /> that contains the client endpoint.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.RequestTraceIdentifier">
            <summary>
            Gets the request identifier of a incoming HTTP request.
            </summary>
            <value>
            A <see cref="T:System.Guid" /> that contains the identifier of a request.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.Url">
            <summary>
            Gets the URL requested by the client.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains the URL requested by the client.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.UrlReferrer">
            <summary>
            Gets the URL of the resource from which the requested URL was obtained.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains the value of the Referer request-header
            or <see langword="null" /> if the request did not include an Referer header.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.UserAgent">
            <summary>
            Gets the information about the user agent originating the request.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the User-Agent request-header.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.UserHostAddress">
            <summary>
            Gets the server endpoint as an IP address and a port number.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the server endpoint.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.UserHostName">
            <summary>
            Gets the internet host name and port number (if present) specified by the client.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Host request-header.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerRequest.UserLanguages">
            <summary>
            Gets the natural languages which are preferred for the response.
            </summary>
            <value>
            An array of <see cref="T:System.String" /> that contains the natural language names in the Accept-Language request-header
            or <see langword="null" /> if the request did not include an Accept-Language header.
            </value>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
            <summary>
            Begins getting the client's X.509 v.3 certificate asynchronously.
            </summary>
            <remarks>
            This asynchronous operation must be completed by calling the <see cref="M:WebSocketSharp.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" /> method.
            Typically, the method is invoked by the <paramref name="requestCallback" /> delegate.
            </remarks>
            <returns>
            An <see cref="T:System.IAsyncResult" /> that contains the status of the asynchronous operation.
            </returns>
            <param name="requestCallback">
            An <see cref="T:System.AsyncCallback" /> delegate that references the method(s)
            called when the asynchronous operation completes.
            </param>
            <param name="state">
            An <see cref="T:System.Object" /> that contains a user defined object to pass to the <paramref name="requestCallback" /> delegate.
            </param>
            <exception cref="T:System.NotImplementedException">
            This method is not implemented.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation to get the client's X.509 v.3 certificate.
            </summary>
            <remarks>
            This method completes an asynchronous operation started by calling the <see cref="M:WebSocketSharp.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> method.
            </remarks>
            <returns>
            A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the client's X.509 v.3 certificate.
            </returns>
            <param name="asyncResult">
            An <see cref="T:System.IAsyncResult" /> obtained by calling the <see cref="M:WebSocketSharp.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> method.
            </param>
            <exception cref="T:System.NotImplementedException">
            This method is not implemented.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerRequest.GetClientCertificate">
            <summary>
            Gets the client's X.509 v.3 certificate.
            </summary>
            <returns>
            A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the client's X.509 v.3 certificate.
            </returns>
            <exception cref="T:System.NotImplementedException">
            This method is not implemented.
            </exception>
        </member>
        <member name="T:WebSocketSharp.Net.HttpListenerResponse">
            <summary>
            Provides access to a response to a request being processed by a <see cref="T:WebSocketSharp.Net.HttpListener" /> instance.
            </summary>
            <remarks>
            The HttpListenerResponse class cannot be inherited.
            </remarks>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.ContentEncoding">
            <summary>
            Gets or sets the encoding that can be used with the entity body data included in the response.
            </summary>
            <value>
            A <see cref="T:System.Text.Encoding" /> that contains the encoding that can be used with the entity body data.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.ContentLength64">
            <summary>
            Gets or sets the size of the entity body data included in the response.
            </summary>
            <value>
            A <see cref="T:System.Int64" /> that contains the value of the Content-Length entity-header field.
            The value is a number of bytes in the entity body data.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The value specified for a set operation is less than zero.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.ContentType">
            <summary>
            Gets or sets the media type of the entity body included in the response.
            </summary>
            <value>
            The type of the content.
            A <see cref="T:System.String" /> that contains the value of the Content-Type entity-header field.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value specified for a set operation is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value specified for a set operation is a <see cref="F:System.String.Empty" />.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.Cookies">
            <summary>
            Gets or sets the cookies returned with the response.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains the cookies returned with the response.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.Headers">
            <summary>
            Gets or sets the HTTP headers returned to the client.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> that contains the HTTP headers returned to the client.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.KeepAlive">
            <summary>
            Gets or sets a value indicating whether the server requests a persistent connection.
            </summary>
            <value>
                <c>true</c> if the server requests a persistent connection; otherwise, <c>false</c>.
            The default is <c>true</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.OutputStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream" /> to use to write the entity body data.
            </summary>
            <value>
            A <see cref="T:System.IO.Stream" /> to use to write the entity body data.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.ProtocolVersion">
            <summary>
            Gets or sets the HTTP version used in the response.
            </summary>
            <value>
            A <see cref="T:System.Version" /> that contains the HTTP version used in the response.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The value specified for a set operation is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value specified for a set operation does not have its <see cref="P:System.Version.Major">Major</see> property set to 1 or
            does not have its <see cref="P:System.Version.Minor">Minor</see> property set to either 0 or 1.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.RedirectLocation">
            <summary>
            Gets or sets the URL to which the client is redirected to locate a requested resource.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Location response-header field.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
            <exception cref="T:System.ArgumentException">
            The value specified for a set operation is a <see cref="F:System.String.Empty" />.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.SendChunked">
            <summary>
            Gets or sets a value indicating whether the response uses the chunked transfer encoding.
            </summary>
            <value>
                <c>true</c> if the response uses the chunked transfer encoding; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.StatusCode">
            <summary>
            Gets or sets the HTTP status code returned to the client.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that indicates the HTTP status code for the response to the request.
            The default is <see cref="F:WebSocketSharp.Net.HttpStatusCode.OK" />.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
            <exception cref="T:System.Net.ProtocolViolationException">
            The value specified for a set operation is invalid. Valid values are between 100 and 999.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.HttpListenerResponse.StatusDescription">
            <summary>
            Gets or sets a description of the HTTP status code returned to the client.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a description of the HTTP status code returned to the client.
            </value>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.System#IDisposable#Dispose">
            <summary>
            Releases all resource used by the <see cref="T:WebSocketSharp.Net.HttpListenerResponse" />.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.Abort">
            <summary>
            Closes the connection to the client without sending a response.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.AddHeader(System.String,System.String)">
            <summary>
            Adds the specified HTTP header <paramref name="name" /> and <paramref name="value" /> to
            the headers for this response.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the name of the HTTP header to add.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the HTTP header to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65,535 characters.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.AppendCookie(WebSocketSharp.Net.Cookie)">
            <summary>
            Adds the specified <see cref="T:WebSocketSharp.Net.Cookie" /> to the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" /> sent with the response.
            </summary>
            <param name="cookie">
            A <see cref="T:WebSocketSharp.Net.Cookie" /> to add to the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="cookie" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.AppendHeader(System.String,System.String)">
            <summary>
            Appends a <paramref name="value" /> to the specified HTTP header sent with the response.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the name of the HTTP header to append <paramref name="value" /> to.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value to append to the HTTP header.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65,535 characters.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.Close">
            <summary>
            Sends the response to the client and releases the resources associated with
            the <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> instance.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)">
            <summary>
            Sends the response with the specified array of <see cref="T:System.Byte" /> to the client and
            releases the resources associated with the <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> instance.
            </summary>
            <param name="responseEntity">
            An array of <see cref="T:System.Byte" /> that contains the response entity body data.
            </param>
            <param name="willBlock">
                <c>true</c> if this method blocks execution while flushing the stream to the client; otherwise, <c>false</c>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="responseEntity" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.CopyFrom(WebSocketSharp.Net.HttpListenerResponse)">
            <summary>
            Copies properties from the specified <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> to this response.
            </summary>
            <param name="templateResponse">
            A <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> to copy.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.Redirect(System.String)">
            <summary>
            Configures the response to redirect the client's request to the specified <paramref name="url" />.
            </summary>
            <param name="url">
            A <see cref="T:System.String" /> that contains a URL to redirect the client's request to.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpListenerResponse.SetCookie(WebSocketSharp.Net.Cookie)">
            <summary>
            Adds or updates a <see cref="T:WebSocketSharp.Net.Cookie" /> in the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" /> sent with the response.
            </summary>
            <param name="cookie">
            A <see cref="T:WebSocketSharp.Net.Cookie" /> to set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="cookie" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="cookie" /> already exists in the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" /> and
            could not be replaced.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlDecode(System.String)">
            <summary>
            Decodes an HTML-encoded <see cref="T:System.String" /> and returns the decoded <see cref="T:System.String" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that contains the decoded string.
            </returns>
            <param name="s">
            A <see cref="T:System.String" /> to decode.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)">
            <summary>
            Decodes an HTML-encoded <see cref="T:System.String" /> and sends the decoded <see cref="T:System.String" />
            to a <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="s">
            A <see cref="T:System.String" /> to decode.
            </param>
            <param name="output">
            A <see cref="T:System.IO.TextWriter" /> that receives the decoded <see cref="T:System.String" />.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlEncode(System.String)">
            <summary>
            HTML-encodes a <see cref="T:System.String" /> and returns the encoded <see cref="T:System.String" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that contains the encoded string.
            </returns>
            <param name="s">
            A <see cref="T:System.String" /> to encode.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)">
            <summary>
            HTML-encodes a <see cref="T:System.String" /> and sends the encoded <see cref="T:System.String" />
            to a <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="s">
            A <see cref="T:System.String" /> to encode.
            </param>
            <param name="output">
            A <see cref="T:System.IO.TextWriter" /> that receives the encoded <see cref="T:System.String" />.
            </param>
        </member>
        <member name="T:WebSocketSharp.Net.WebHeaderCollection">
            <summary>
            Provides a collection of the HTTP headers associated with a request or response.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> class
            with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.
            </summary>
            <param name="serializationInfo">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the data to need to serialize the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> object.
            </param>
            <param name="streamingContext">
            A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream associated with the new <see cref="T:WebSocketSharp.Net.WebHeaderCollection" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="serializationInfo" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
            An element with the specified name is not found in <paramref name="serializationInfo" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> class.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)">
            <summary>
            Gets or sets the specified request <paramref name="header" /> in the collection.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the specified request <paramref name="header" />.
            </value>
            <param name="header">
            A <see cref="T:System.Net.HttpRequestHeader" /> that indicates a request header.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpRequestHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="header" /> is a restricted header.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="value" /> contains invalid characters.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.WebHeaderCollection.Item(System.Net.HttpResponseHeader)">
            <summary>
            Gets or sets the specified response <paramref name="header" /> in the collection.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the specified response <paramref name="header" />.
            </value>
            <param name="header">
            A <see cref="T:System.Net.HttpResponseHeader" /> that indicates a response header.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpResponseHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="header" /> is a restricted header.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="value" /> contains invalid characters.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.WebHeaderCollection.AllKeys">
            <summary>
            Gets all header names in the collection.
            </summary>
            <value>
            An array of <see cref="T:System.String" /> that contains all header names in the collection.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebHeaderCollection.Count">
            <summary>
            Gets the number of headers in the collection.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that indicates the number of headers in the collection.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebHeaderCollection.Keys">
            <summary>
            Gets a collection of header names in the collection.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> that contains a collection of header names in the collection.
            </value>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data to need to
            serialize the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> object.
            </summary>
            <param name="serializationInfo">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the data to need to serialize the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> object.
            </param>
            <param name="streamingContext">
            A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for the serialization.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="serializationInfo" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.AddWithoutValidate(System.String,System.String)">
            <summary>
            Adds a header to the collection without checking whether the header is on the restricted header list.
            </summary>
            <param name="headerName">
            A <see cref="T:System.String" /> that contains the name of the header to add.
            </param>
            <param name="headerValue">
            A <see cref="T:System.String" /> that contains the value of the header to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="headerName" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="headerName" /> or <paramref name="headerValue" /> contains invalid characters.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="headerValue" /> is greater than 65535.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow the <paramref name="headerName" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Add(System.String)">
            <summary>
            Adds the specified <paramref name="header" /> to the collection.
            </summary>
            <param name="header">
            A <see cref="T:System.String" /> that contains a header with the name and value separated by a colon (:).
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="header" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or
            the name part of <paramref name="header" /> is <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="header" /> does not contain a colon.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="header" /> is a restricted header.
            </para>
                <para>
            -or-
            </para>
                <para>
            The name or value part of <paramref name="header" /> contains invalid characters.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of the value part of <paramref name="header" /> is greater than 65535.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow the <paramref name="header" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Add(System.Net.HttpRequestHeader,System.String)">
            <summary>
            Adds the specified request <paramref name="header" /> with the specified <paramref name="value" /> to the collection.
            </summary>
            <param name="header">
            A <see cref="T:System.Net.HttpRequestHeader" /> is a request header to add.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the header to add.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpRequestHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="header" /> is a restricted header.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="value" /> contains invalid characters.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Add(System.Net.HttpResponseHeader,System.String)">
            <summary>
            Adds the specified response <paramref name="header" /> with the specified <paramref name="value" /> to the collection.
            </summary>
            <param name="header">
            A <see cref="T:System.Net.HttpResponseHeader" /> is a response header to add.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the header to add.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpResponseHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="header" /> is a restricted header.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="value" /> contains invalid characters.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Add(System.String,System.String)">
            <summary>
            Adds a header with the specified <paramref name="name" /> and <paramref name="value" /> to the collection.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the name of the header to add.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the header to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="name" /> or <paramref name="value" /> contains invalid characters.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="name" /> is a restricted header name.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow the header <paramref name="name" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Clear">
            <summary>
            Removes all headers from the collection.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Get(System.Int32)">
            <summary>
            Get the value of the header with the specified <paramref name="index" /> in the collection.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that receives the value of the header.
            </returns>
            <param name="index">
            An <see cref="T:System.Int32" /> that is the zero-based index of the header to get.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Get(System.String)">
            <summary>
            Get the value of the header with the specified <paramref name="name" /> in the collection.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that receives the value of the header.
            <see langword="null" /> if there is no header with <paramref name="name" /> in the collection.
            </returns>
            <param name="name">
            A <see cref="T:System.String" /> that contains the name of the header to get.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.GetEnumerator">
            <summary>
            Gets the enumerator to use to iterate through the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" />.
            </summary>
            <returns>
            An instance of an implementation of the <see cref="T:System.Collections.IEnumerator" /> interface
            to use to iterate through the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" />.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.GetKey(System.Int32)">
            <summary>
            Get the header name at the specified <paramref name="index" /> position in the collection.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that receives the header name.
            </returns>
            <param name="index">
            An <see cref="T:System.Int32" /> is the zero-based index of the key to get from the collection.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.GetValues(System.String)">
            <summary>
            Gets an array of header values stored in the specified <paramref name="header" /> name.
            </summary>
            <returns>
            An array of <see cref="T:System.String" /> that receives the header values.
            </returns>
            <param name="header">
            A <see cref="T:System.String" /> that contains a header name.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.GetValues(System.Int32)">
            <summary>
            Gets an array of header values stored in the specified <paramref name="index" /> position of the header collection.
            </summary>
            <returns>
            An array of <see cref="T:System.String" /> that receives the header values.
            </returns>
            <param name="index">
            An <see cref="T:System.Int32" /> is the zero-based index of the header in the collection.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data to need to
            serialize the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> object.
            </summary>
            <param name="serializationInfo">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the data to need to serialize the <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> object.
            </param>
            <param name="streamingContext">
            A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for the serialization.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="serializationInfo" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.IsRestricted(System.String)">
            <summary>
            Determines whether the specified header can be set for the request.
            </summary>
            <returns>
                <c>true</c> if the header is restricted; otherwise, <c>false</c>.
            </returns>
            <param name="headerName">
            A <see cref="T:System.String" /> that contains the name of the header to test.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="headerName" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="headerName" /> contains invalid characters.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.IsRestricted(System.String,System.Boolean)">
            <summary>
            Determines whether the specified header can be set for the request or the response.
            </summary>
            <returns>
                <c>true</c> if the header is restricted; otherwise, <c>false</c>.
            </returns>
            <param name="headerName">
            A <see cref="T:System.String" /> that contains the name of the header to test.
            </param>
            <param name="response">
                <c>true</c> if does the test for the response; for the request, <c>false</c>.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="headerName" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="headerName" /> contains invalid characters.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.OnDeserialization(System.Object)">
            <summary>
            Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event
            when the deserialization is complete.
            </summary>
            <param name="sender">
            An <see cref="T:System.Object" /> that contains the source of the deserialization event.
            </param>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Remove(System.Net.HttpRequestHeader)">
            <summary>
            Removes the specified header from the collection.
            </summary>
            <param name="header">
            A <see cref="T:System.Net.HttpRequestHeader" /> to remove from the collection.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpRequestHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="header" /> is a restricted header.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Remove(System.Net.HttpResponseHeader)">
            <summary>
            Removes the specified header from the collection.
            </summary>
            <param name="header">
            A <see cref="T:System.Net.HttpResponseHeader" /> to remove from the collection.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpResponseHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="header" /> is a restricted header.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Remove(System.String)">
            <summary>
            Removes the specified header from the collection.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the name of the header to remove from the collection.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="name" /> contains invalid characters.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="name" /> is a restricted header name.
            </para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow the header <paramref name="name" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Set(System.Net.HttpRequestHeader,System.String)">
            <summary>
            Sets the specified header to the specified value.
            </summary>
            <param name="header">
            A <see cref="T:System.Net.HttpRequestHeader" /> to set.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the header to set.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpRequestHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="header" /> is a restricted header.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="value" /> contains invalid characters.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Set(System.Net.HttpResponseHeader,System.String)">
            <summary>
            Sets the specified header to the specified value.
            </summary>
            <param name="header">
            A <see cref="T:System.Net.HttpResponseHeader" /> to set.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the header to set.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow any of <see cref="T:System.Net.HttpResponseHeader" /> values.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="header" /> is a restricted header.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="value" /> contains invalid characters.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.Set(System.String,System.String)">
            <summary>
            Sets the specified header to the specified value.
            </summary>
            <param name="name">
            A <see cref="T:System.String" /> that contains the name of the header to set.
            </param>
            <param name="value">
            A <see cref="T:System.String" /> that contains the value of the header to set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="name" /> or <paramref name="value" /> contain invalid characters.
            </para>
                <para>
            -or-
            </para>
                <para>
                    <paramref name="name" /> is a restricted header name.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65535.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> instance does not allow the header <paramref name="name" />.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.ToByteArray">
            <summary>
            Converts the current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> to an array of <see cref="T:System.Byte" />.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte" /> that receives the converted current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" />.
            </returns>
        </member>
        <member name="M:WebSocketSharp.Net.WebHeaderCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:WebSocketSharp.Net.WebHeaderCollection" />.
            </returns>
        </member>
        <member name="T:WebSocketSharp.Server.HttpServer">
            <summary>
            Provides a simple HTTP server that allows to accept the WebSocket connection requests.
            </summary>
            <remarks>
            The HttpServer instance can provide the multi WebSocket services.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Server.HttpServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.HttpServer" /> class that listens for incoming requests
            on port 80.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.HttpServer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.HttpServer" /> class that listens for incoming requests
            on the specified <paramref name="port" />.
            </summary>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnConnect">
            <summary>
            Occurs when the server receives an HTTP CONNECT request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnDelete">
            <summary>
            Occurs when the server receives an HTTP DELETE request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnError">
            <summary>
            Occurs when the server gets an error.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnGet">
            <summary>
            Occurs when the server receives an HTTP GET request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnHead">
            <summary>
            Occurs when the server receives an HTTP HEAD request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnOptions">
            <summary>
            Occurs when the server receives an HTTP OPTIONS request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnPatch">
            <summary>
            Occurs when the server receives an HTTP PATCH request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnPost">
            <summary>
            Occurs when the server receives an HTTP POST request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnPut">
            <summary>
            Occurs when the server receives an HTTP PUT request.
            </summary>
        </member>
        <member name="E:WebSocketSharp.Server.HttpServer.OnTrace">
            <summary>
            Occurs when the server receives an HTTP TRACE request.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Server.HttpServer.IsListening">
            <summary>
            Gets a value indicating whether the server has been started.
            </summary>
            <value>
                <c>true</c> if the server has been started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.HttpServer.KeepClean">
            <summary>
            Gets or sets a value indicating whether the server cleans up the inactive WebSocket service
            instances periodically.
            </summary>
            <value>
                <c>true</c> if the server cleans up the inactive WebSocket service instances every 60 seconds;
            otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.HttpServer.Log">
            <summary>
            Gets the logging functions.
            </summary>
            <remarks>
            The default logging level is the <see cref="F:WebSocketSharp.LogLevel.ERROR" />.
            If you want to change the current logging level, you set the <c>Log.Level</c> property
            to one of the <see cref="T:WebSocketSharp.LogLevel" /> values which you want.
            </remarks>
            <value>
            A <see cref="T:WebSocketSharp.Logger" /> that provides the logging functions.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.HttpServer.Port">
            <summary>
            Gets the port on which to listen for incoming requests.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that contains a port number.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.HttpServer.RootPath">
            <summary>
            Gets or sets the document root path of server.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the document root path of server.
            The default value is <c>./Public</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.HttpServer.ServicePaths">
            <summary>
            Gets the collection of paths associated with the every WebSocket services that the server provides.
            </summary>
            <value>
            An IEnumerable&lt;string&gt; that contains the collection of paths.
            </value>
        </member>
        <member name="M:WebSocketSharp.Server.HttpServer.AddWebSocketService``1(System.String)">
            <summary>
            Adds the specified typed WebSocket service.
            </summary>
            <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path associated with the WebSocket service.
            </param>
            <typeparam name="T">
            The type of the WebSocket service. The T must inherit the <see cref="T:WebSocketSharp.Server.WebSocketService" /> class.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Server.HttpServer.GetFile(System.String)">
            <summary>
            Gets the contents of the file with the specified <paramref name="path" />.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte" /> that contains the contents of the file if exists;
            otherwise, <see langword="null" />.
            </returns>
            <param name="path">
            A <see cref="T:System.String" /> that contains a virtual path to the file to get.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.HttpServer.Start">
            <summary>
            Starts to receive the HTTP requests.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.HttpServer.Stop">
            <summary>
            Stops receiving the HTTP requests.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Net.HttpVersion">
            <summary>
            Provides the HTTP version numbers.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpVersion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.HttpVersion" /> class.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpVersion.Version10">
            <summary>
            Provides a <see cref="T:System.Version" /> instance for HTTP 1.0.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpVersion.Version11">
            <summary>
            Provides a <see cref="T:System.Version" /> instance for HTTP 1.1.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Net.HttpStatusCode">
            <summary>
            Contains the values of the HTTP status codes.
            </summary>
            <remarks>
            The HttpStatusCode enumeration contains the values of the HTTP status codes defined in
            <see href="http://tools.ietf.org/html/rfc2616#section-10">RFC 2616</see> for HTTP 1.1.
            </remarks>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Continue">
            <summary>
            Equivalent to status code 100. Indicates that the client should continue with its request.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.SwitchingProtocols">
            <summary>
            Equivalent to status code 101. Indicates that the server is switching the HTTP version or protocol on the connection.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.OK">
            <summary>
            Equivalent to status code 200. Indicates that the client's request has succeeded.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Created">
            <summary>
            Equivalent to status code 201. Indicates that the client's request has been fulfilled
            and resulted in a new resource being created.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Accepted">
            <summary>
            Equivalent to status code 202. Indicates that the client's request has been accepted for processing,
            but the processing has not been completed.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.NonAuthoritativeInformation">
            <summary>
            Equivalent to status code 203. Indicates that the returned metainformation is from a local or a third-party copy instead of the origin server.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.NoContent">
            <summary>
            Equivalent to status code 204. Indicates that the server has fulfilled the client's request
            but does not need to return an entity-body.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.ResetContent">
            <summary>
            Equivalent to status code 205. Indicates that the server has fulfilled the client's request
            and the user agent should reset the document view which caused the request to be sent.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.PartialContent">
            <summary>
            Equivalent to status code 206. Indicates that the server has fulfilled the partial GET request for the resource.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.MultipleChoices">
            <summary>
                <para>
            Equivalent to status code 300. Indicates that the requested resource corresponds to
            any one of multiple representations.
            </para>
                <para>
            MultipleChoices is a synonym for Ambiguous.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Ambiguous">
            <summary>
                <para>
            Equivalent to status code 300. Indicates that the requested resource corresponds to
            any one of multiple representations.
            </para>
                <para>
            Ambiguous is a synonym for MultipleChoices.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.MovedPermanently">
            <summary>
                <para>
            Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI
            and any future references to this resource should use one of the returned URIs.
            </para>
                <para>
            MovedPermanently is a synonym for Moved.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Moved">
            <summary>
                <para>
            Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI
            and any future references to this resource should use one of the returned URIs.
            </para>
                <para>
            Moved is a synonym for MovedPermanently.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Found">
            <summary>
                <para>
            Equivalent to status code 302. Indicates that the requested resource is located temporarily
            under a different URI.
            </para>
                <para>
            Found is a synonym for Redirect.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Redirect">
            <summary>
                <para>
            Equivalent to status code 302. Indicates that the requested resource is located temporarily
            under a different URI.
            </para>
                <para>
            Redirect is a synonym for Found.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.SeeOther">
            <summary>
                <para>
            Equivalent to status code 303. Indicates that the response to the request can be found
            under a different URI and should be retrieved using a GET method on that resource.
            </para>
                <para>
            SeeOther is a synonym for RedirectMethod.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.RedirectMethod">
            <summary>
                <para>
            Equivalent to status code 303. Indicates that the response to the request can be found
            under a different URI and should be retrieved using a GET method on that resource.
            </para>
                <para>
            RedirectMethod is a synonym for SeeOther.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.NotModified">
            <summary>
            Equivalent to status code 304. Indicates that the client has performed a conditional GET request
            and access is allowed, but the document has not been modified.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.UseProxy">
            <summary>
            Equivalent to status code 305. Indicates that the requested resource must be accessed
            through the proxy given by the Location field.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Unused">
            <summary>
            Equivalent to status code 306. This code was used in a previous version of the specification,
            is no longer used, and is reserved for future use.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.TemporaryRedirect">
            <summary>
                <para>
            Equivalent to status code 307. Indicates that the requested resource is located temporarily
            under a different URI.
            </para>
                <para>
            TemporaryRedirect is a synonym for RedirectKeepVerb.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.RedirectKeepVerb">
            <summary>
                <para>
            Equivalent to status code 307. Indicates that the requested resource is located temporarily
            under a different URI.
            </para>
                <para>
            RedirectKeepVerb is a synonym for TemporaryRedirect.
            </para>
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.BadRequest">
            <summary>
            Equivalent to status code 400. Indicates that the client's request could not be understood
            by the server due to malformed syntax.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Unauthorized">
            <summary>
            Equivalent to status code 401. Indicates that the client's request requires user authentication.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.PaymentRequired">
            <summary>
            Equivalent to status code 402. This code is reserved for future use.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Forbidden">
            <summary>
            Equivalent to status code 403. Indicates that the server understood the client's request
            but is refusing to fulfill it.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.NotFound">
            <summary>
            Equivalent to status code 404. Indicates that the server has not found anything
            matching the request URI.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.MethodNotAllowed">
            <summary>
            Equivalent to status code 405. Indicates that the method specified in the request line
            is not allowed for the resource identified by the request URI.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.NotAcceptable">
            <summary>
            Equivalent to status code 406. Indicates that the server does not have the appropriate resource
            to respond to the accept headers in the client's request.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.ProxyAuthenticationRequired">
            <summary>
            Equivalent to status code 407. Indicates that the client must first authenticate itself with the proxy.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.RequestTimeout">
            <summary>
            Equivalent to status code 408. Indicates that the client did not produce a request
            within the time that the server was prepared to wait.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Conflict">
            <summary>
            Equivalent to status code 409. Indicates that the client's request could not be completed
            due to a conflict on the server.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.Gone">
            <summary>
            Equivalent to status code 410. Indicates that the requested resource is no longer available
            at the server and no forwarding address is known.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.LengthRequired">
            <summary>
            Equivalent to status code 411. Indicates that the server refuses to accept the client's request
            without a defined Content-Length.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.PreconditionFailed">
            <summary>
            Equivalent to status code 412. Indicates that the precondition given in one or more of the request header fields
            evaluated to false when it was tested on the server.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.RequestEntityTooLarge">
            <summary>
            Equivalent to status code 413. Indicates that the client's request entity is larger
            than the server is willing or able to process.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.RequestUriTooLong">
            <summary>
            Equivalent to status code 414. Indicates that the request URI is longer
            than the server is willing to interpret.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.UnsupportedMediaType">
            <summary>
            Equivalent to status code 415. Indicates that the entity of the client's request is in a format
            not supported by the requested resource for the requested method.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
            <summary>
            Equivalent to status code 416. Indicates that none of the range specifier values in a Range request header field
            overlap the current extent of the selected resource.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.ExpectationFailed">
            <summary>
            Equivalent to status code 417. Indicates that the expectation given in an Expect request header field
            could not be met by the server.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.InternalServerError">
            <summary>
            Equivalent to status code 500. Indicates that the server encountered an unexpected condition
            which prevented it from fulfilling the client's request.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.NotImplemented">
            <summary>
            Equivalent to status code 501. Indicates that the server does not support the functionality
            required to fulfill the client's request.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.BadGateway">
            <summary>
            Equivalent to status code 502. Indicates that a gateway or proxy server received an invalid response
            from the upstream server.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.ServiceUnavailable">
            <summary>
            Equivalent to status code 503. Indicates that the server is currently unable to handle the client's request
            due to a temporary overloading or maintenance of the server.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.GatewayTimeout">
            <summary>
            Equivalent to status code 504. Indicates that a gateway or proxy server did not receive a timely response
            from the upstream server or some other auxiliary server.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Net.HttpStatusCode.HttpVersionNotSupported">
            <summary>
            Equivalent to status code 505. Indicates that the server does not support the HTTP version
            used in the client's request.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Server.WebSocketServerBase">
            <summary>
            Provides the basic functions of the server that receives the WebSocket connection requests.
            </summary>
            <remarks>
            The WebSocketServerBase class is an abstract class.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServerBase" /> class.
            </summary>
            <remarks>
            This constructor initializes a new instance of this class as non self hosted server.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.#ctor(WebSocketSharp.Logger)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServerBase" /> class
            with the specified <paramref name="logger" />.
            </summary>
            <remarks>
            This constructor initializes a new instance of this class as non self hosted server.
            </remarks>
            <param name="logger">
            A <see cref="T:WebSocketSharp.Logger" /> that provides the logging functions.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServerBase" /> class
            that listens for incoming connection attempts on the specified WebSocket URL.
            </summary>
            <param name="url">
            A <see cref="T:System.String" /> that contains a WebSocket URL.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="url" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="url" /> is invalid.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.#ctor(System.Net.IPAddress,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServerBase" /> class
            that listens for incoming connection attempts on the specified <paramref name="address" />,
            <paramref name="port" />, <paramref name="absPath" /> and <paramref name="secure" />.
            </summary>
            <param name="address">
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </param>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path.
            </param>
            <param name="secure">
            A <see cref="T:System.Boolean" /> that indicates providing a secure connection or not.
            (<c>true</c> indicates providing a secure connection.)
            </param>
            <exception cref="T:System.ArgumentNullException">
            Either <paramref name="address" /> or <paramref name="absPath" /> is <see langword="null" />.
            </exception>
            <exception cref="T:System.ArgumentException">
                <para>
                    <paramref name="absPath" /> is invalid.
            </para>
                <para>
            -or-
            </para>
                <para>
            Pair of <paramref name="port" /> and <paramref name="secure" /> is invalid.
            </para>
            </exception>
        </member>
        <member name="E:WebSocketSharp.Server.WebSocketServerBase.OnError">
            <summary>
            Occurs when the server gets an error.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.BaseUri">
            <summary>
            Gets or sets the WebSocket URL on which to listen for incoming connection attempts.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains a WebSocket URL.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.Address">
            <summary>
            Gets the local IP address on which to listen for incoming connection attempts.
            </summary>
            <value>
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.Certificate">
            <summary>
            Gets or sets the certificate used to authenticate the server on the secure connection.
            </summary>
            <value>
            A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> used to authenticate the server.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.IsListening">
            <summary>
            Gets a value indicating whether the server has been started.
            </summary>
            <value>
                <c>true</c> if the server has been started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.IsSecure">
            <summary>
            Gets a value indicating whether the server provides secure connection.
            </summary>
            <value>
                <c>true</c> if the server provides secure connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.IsSelfHost">
            <summary>
            Gets a value indicating whether the server is self host.
            </summary>
            <value>
                <c>true</c> if the server is self host; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.Log">
            <summary>
            Gets the logging functions.
            </summary>
            <remarks>
            The default logging level is the <see cref="F:WebSocketSharp.LogLevel.ERROR" />.
            If you want to change the current logging level, you set the <c>Log.Level</c> property
            to one of the <see cref="T:WebSocketSharp.LogLevel" /> values which you want.
            </remarks>
            <value>
            A <see cref="T:WebSocketSharp.Logger" /> that provides the logging functions.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServerBase.Port">
            <summary>
            Gets the port on which to listen for incoming connection attempts.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that contains a port number.
            </value>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.AcceptWebSocket(WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext)">
            <summary>
            Accepts a WebSocket connection request.
            </summary>
            <param name="context">
            A <see cref="T:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext" /> that contains the WebSocket connection request objects.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.Error(System.String)">
            <summary>
            Occurs the <see cref="E:WebSocketSharp.Server.WebSocketServerBase.OnError" /> event with the specified <see cref="T:System.String" />.
            </summary>
            <param name="message">
            A <see cref="T:System.String" /> that contains an error message.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.Start">
            <summary>
            Starts to receive the WebSocket connection requests.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServerBase.Stop">
            <summary>
            Stops receiving the WebSocket connection requests.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Server.IServiceHost">
            <summary>
            Exposes the methods and properties for the WebSocket service host.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:WebSocketSharp.Server.IServiceHost.KeepClean">
            <summary>
            Gets or sets a value indicating whether the WebSocket service host cleans up the inactive service
            instances periodically.
            </summary>
            <value>
                <c>true</c> if the WebSocket service host cleans up the inactive service instances periodically;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:WebSocketSharp.Server.IServiceHost.BindWebSocket(WebSocketSharp.Net.WebSockets.WebSocketContext)">
            <summary>
            Binds the specified <see cref="T:WebSocketSharp.Net.WebSockets.WebSocketContext" /> to a <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
            <param name="context">
            A <see cref="T:WebSocketSharp.Net.WebSockets.WebSocketContext" /> that contains the WebSocket connection request objects to bind.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.IServiceHost.Broadcast(System.String)">
            <summary>
            Broadcasts the specified <see cref="T:System.String" /> to all service clients.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> to broadcast.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.IServiceHost.Start">
            <summary>
            Starts the WebSocket service host.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.IServiceHost.Stop">
            <summary>
            Stops the WebSocket service host.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Server.WebSocketServiceHost`1">
            <summary>
            Provides the functions of the server that receives the WebSocket connection requests.
            </summary>
            <remarks>
            The WebSocketServiceHost&lt;T&gt; class provides the single WebSocket service.
            </remarks>
            <typeparam name="T">
            The type of the WebSocket service that the server provides. The T must inherit the <see cref="T:WebSocketSharp.Server.WebSocketService" /> class.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the WebSocketServiceHost&lt;T&gt; class that listens for incoming connection attempts
            on the specified <paramref name="port" />.
            </summary>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WebSocketServiceHost&lt;T&gt; class that listens for incoming connection attempts
            on the specified WebSocket URL.
            </summary>
            <param name="url">
            A <see cref="T:System.String" /> that contains a WebSocket URL.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the WebSocketServiceHost&lt;T&gt; class that listens for incoming connection attempts
            on the specified <paramref name="port" /> and <paramref name="secure" />.
            </summary>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="secure">
            A <see cref="T:System.Boolean" /> that indicates providing a secure connection or not. (<c>true</c> indicates providing a secure connection.)
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the WebSocketServiceHost&lt;T&gt; class that listens for incoming connection attempts
            on the specified <paramref name="port" /> and <paramref name="absPath" />.
            </summary>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the WebSocketServiceHost&lt;T&gt; class that listens for incoming connection attempts
            on the specified <paramref name="port" />, <paramref name="absPath" /> and <paramref name="secure" />.
            </summary>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path.
            </param>
            <param name="secure">
            A <see cref="T:System.Boolean" /> that indicates providing a secure connection or not. (<c>true</c> indicates providing a secure connection.)
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.#ctor(System.Net.IPAddress,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the WebSocketServiceHost&lt;T&gt; class that listens for incoming connection attempts
            on the specified <paramref name="address" />, <paramref name="port" /> and <paramref name="absPath" />.
            </summary>
            <param name="address">
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </param>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.#ctor(System.Net.IPAddress,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the WebSocketServiceHost&lt;T&gt; class that listens for incoming connection attempts
            on the specified <paramref name="address" />, <paramref name="port" />, <paramref name="absPath" /> and <paramref name="secure" />.
            </summary>
            <param name="address">
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </param>
            <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
            <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path.
            </param>
            <param name="secure">
            A <see cref="T:System.Boolean" /> that indicates providing a secure connection or not. (<c>true</c> indicates providing a secure connection.)
            </param>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServiceHost`1.KeepClean">
            <summary>
            Gets or sets a value indicating whether the server cleans up the inactive WebSocket service
            instances periodically.
            </summary>
            <value>
                <c>true</c> if the server cleans up the inactive WebSocket service instances every 60 seconds;
            otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServiceHost`1.Uri">
            <summary>
            Gets the WebSocket URL on which to listen for incoming connection attempts.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains a WebSocket URL.
            </value>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.WebSocketSharp#Server#IServiceHost#BindWebSocket(WebSocketSharp.Net.WebSockets.WebSocketContext)">
            <summary>
            Binds the specified <see cref="T:WebSocketSharp.Net.WebSockets.WebSocketContext" /> to a <see cref="T:WebSocketSharp.Server.WebSocketService" /> instance.
            </summary>
            <param name="context">
            A <see cref="T:WebSocketSharp.Net.WebSockets.WebSocketContext" /> that contains the WebSocket connection request objects to bind.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.AcceptWebSocket(WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext)">
            <summary>
            Accepts a WebSocket connection request.
            </summary>
            <param name="context">
            A <see cref="T:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext" /> that contains the WebSocket connection request objects.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.Broadcast(System.String)">
            <summary>
            Broadcasts the specified <see cref="T:System.String" /> to all clients.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> to broadcast.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.Broadping(System.String)">
            <summary>
            Pings with the specified <see cref="T:System.String" /> to all clients.
            </summary>
            <returns>
            A Dictionary&lt;string, bool&gt; that contains the collection of session IDs and values
            indicating whether the server received the Pongs from each clients in a time.
            </returns>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceHost`1.Stop">
            <summary>
            Stops receiving the WebSocket connection requests.
            </summary>
        </member>
        <member name="T:WebSocketSharp.CloseStatusCode">
            <summary>
            Contains the values of the status codes for the WebSocket connection closure.
            </summary>
            <remarks>
                <para>
            The <b>CloseStatusCode</b> enumeration contains the values of the status codes for the WebSocket connection closure
            defined in <a href="http://tools.ietf.org/html/rfc6455#section-7.4.1">RFC 6455</a> for the WebSocket protocol.
            </para>
                <para>
            "<b>Reserved value</b>" must not be set as a status code in a close control frame by an endpoint.
            It is designated for use in applications expecting a status code to indicate that connection
            was closed due to a system grounds.
            </para>
            </remarks>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.NORMAL">
            <summary>
            Equivalent to close status 1000. Indicates a normal closure.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.AWAY">
            <summary>
            Equivalent to close status 1001. Indicates that an endpoint is "going away".
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.PROTOCOL_ERROR">
            <summary>
            Equivalent to close status 1002. Indicates that an endpoint is terminating the connection
            due to a protocol error.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.INCORRECT_DATA">
            <summary>
            Equivalent to close status 1003. Indicates that an endpoint is terminating the connection
            because it has received a type of data it cannot accept.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.UNDEFINED">
            <summary>
            Equivalent to close status 1004. Still undefined. Reserved value.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.NO_STATUS_CODE">
            <summary>
            Equivalent to close status 1005. Indicates that no status code was actually present. Reserved value.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.ABNORMAL">
            <summary>
            Equivalent to close status 1006. Indicates that the connection was closed abnormally. Reserved value.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.INCONSISTENT_DATA">
            <summary>
            Equivalent to close status 1007. Indicates that an endpoint is terminating the connection
            because it has received data within a message that was not consistent with the type of the message.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.POLICY_VIOLATION">
            <summary>
            Equivalent to close status 1008. Indicates that an endpoint is terminating the connection
            because it has received a message that violates its policy.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.TOO_BIG">
            <summary>
            Equivalent to close status 1009. Indicates that an endpoint is terminating the connection
            because it has received a message that is too big for it to process.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.IGNORE_EXTENSION">
            <summary>
            Equivalent to close status 1010. Indicates that an endpoint (client) is terminating the connection
            because it has expected the server to negotiate one or more extension, but the server didn't return
            them in the response message of the WebSocket handshake.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.SERVER_ERROR">
            <summary>
            Equivalent to close status 1011. Indicates that a server is terminating the connection because it encountered
            an unexpected condition that prevented it from fulfilling the request.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CloseStatusCode.TLS_HANDSHAKE_FAILURE">
            <summary>
            Equivalent to close status 1015. Indicates that the connection was closed due to a failure to perform
            a TLS handshake. Reserved value.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Opcode">
            <summary>
            Contains the values of the opcodes that denotes the frame type of the WebSocket frame.
            </summary>
            <remarks>
            The <b>Opcode</b> enumeration contains the values of the opcodes defined in
            <see href="http://tools.ietf.org/html/rfc6455#section-5.2">RFC 6455</see> for the WebSocket protocol.
            </remarks>
        </member>
        <member name="F:WebSocketSharp.Opcode.CONT">
            <summary>
            Equivalent to numeric value 0. Indicates a continuation frame.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Opcode.TEXT">
            <summary>
            Equivalent to numeric value 1. Indicates a text frame.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Opcode.BINARY">
            <summary>
            Equivalent to numeric value 2. Indicates a binary frame.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Opcode.CLOSE">
            <summary>
            Equivalent to numeric value 8. Indicates a connection close frame.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Opcode.PING">
            <summary>
            Equivalent to numeric value 9. Indicates a ping frame.
            </summary>
        </member>
        <member name="F:WebSocketSharp.Opcode.PONG">
            <summary>
            Equivalent to numeric value 10. Indicates a pong frame.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext">
            <summary>
            Provides access to the WebSocket connection request objects received by the <see cref="T:WebSocketSharp.Net.HttpListener" /> class.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.CookieCollection">
            <summary>
            Gets the cookies used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains the cookies.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.Headers">
            <summary>
            Gets the HTTP headers used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the HTTP headers.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.IsAuthenticated">
            <summary>
            Gets a value indicating whether the client is authenticated.
            </summary>
            <value>
                <c>true</c> if the client is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.IsLocal">
            <summary>
            Gets a value indicating whether the client connected from the local computer.
            </summary>
            <value>
                <c>true</c> if the client connected from the local computer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.IsSecureConnection">
            <summary>
            Gets a value indicating whether the WebSocket connection is secured.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection is secured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.IsValid">
            <summary>
            Gets a value indicating whether the WebSocket connection request is valid.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection request is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.Origin">
            <summary>
            Gets the value of the Origin header field used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Origin header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.Path">
            <summary>
            Gets the absolute path of the requested WebSocket URI.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the absolute path of the requested WebSocket URI.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.QueryString">
            <summary>
            Gets the collection of query string variables used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the collection of query string variables.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.RequestUri">
            <summary>
            Gets the WebSocket URI requested by the client.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains the WebSocket URI.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketKey">
            <summary>
            Gets the value of the Sec-WebSocket-Key header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketKey property provides a part of the information used by the server to prove that it received a valid WebSocket opening handshake.
            </remarks>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Sec-WebSocket-Key header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketProtocols">
            <summary>
            Gets the values of the Sec-WebSocket-Protocol header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketProtocols property indicates the subprotocols of the WebSocket connection.
            </remarks>
            <value>
            An IEnumerable&lt;string&gt; that contains the values of the Sec-WebSocket-Protocol header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketVersion">
            <summary>
            Gets the value of the Sec-WebSocket-Version header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketVersion property indicates the WebSocket protocol version of the connection.
            </remarks>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Sec-WebSocket-Version header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.ServerEndPoint">
            <summary>
            Gets the server endpoint as an IP address and a port number.
            </summary>
            <value>
            A <see cref="T:System.Net.IPEndPoint" /> that contains the server endpoint.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.User">
            <summary>
            Gets the client information (identity, authentication information and security roles).
            </summary>
            <value>
            A <see cref="T:System.Security.Principal.IPrincipal" /> that contains the client information.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.UserEndPoint">
            <summary>
            Gets the client endpoint as an IP address and a port number.
            </summary>
            <value>
            A <see cref="T:System.Net.IPEndPoint" /> that contains the client endpoint.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.WebSocket">
            <summary>
            Gets the WebSocket instance used for two-way communication between client and server.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.WebSocket" />.
            </value>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext">
            <summary>
            Provides access to the WebSocket connection request objects received by the <see cref="T:System.Net.Sockets.TcpListener" />.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.CookieCollection">
            <summary>
            Gets the cookies used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains the cookies.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.Headers">
            <summary>
            Gets the HTTP headers used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the HTTP headers.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.IsAuthenticated">
            <summary>
            Gets a value indicating whether the client is authenticated.
            </summary>
            <value>
                <c>true</c> if the client is authenticated; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.NotImplementedException">
            This property is not implemented.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.IsLocal">
            <summary>
            Gets a value indicating whether the client connected from the local computer.
            </summary>
            <value>
                <c>true</c> if the client connected from the local computer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.IsSecureConnection">
            <summary>
            Gets a value indicating whether the WebSocket connection is secured.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection is secured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.IsValid">
            <summary>
            Gets a value indicating whether the WebSocket connection request is valid.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection request is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.Origin">
            <summary>
            Gets the value of the Origin header field used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Origin header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.Path">
            <summary>
            Gets the absolute path of the requested WebSocket URI.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the absolute path of the requested WebSocket URI.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.QueryString">
            <summary>
            Gets the collection of query string variables used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the collection of query string variables.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.RequestUri">
            <summary>
            Gets the WebSocket URI requested by the client.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains the WebSocket URI.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.SecWebSocketKey">
            <summary>
            Gets the value of the Sec-WebSocket-Key header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketKey property provides a part of the information used by the server to prove that it received a valid WebSocket opening handshake.
            </remarks>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Sec-WebSocket-Key header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.SecWebSocketProtocols">
            <summary>
            Gets the values of the Sec-WebSocket-Protocol header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketProtocols property indicates the subprotocols of the WebSocket connection.
            </remarks>
            <value>
            An IEnumerable&lt;string&gt; that contains the values of the Sec-WebSocket-Protocol header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.SecWebSocketVersion">
            <summary>
            Gets the value of the Sec-WebSocket-Version header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketVersion property indicates the WebSocket protocol version of the connection.
            </remarks>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Sec-WebSocket-Version header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.ServerEndPoint">
            <summary>
            Gets the server endpoint as an IP address and a port number.
            </summary>
            <value>
            A <see cref="T:System.Net.IPEndPoint" /> that contains the server endpoint.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.User">
            <summary>
            Gets the client information (identity, authentication information and security roles).
            </summary>
            <value>
            A <see cref="T:System.Security.Principal.IPrincipal" /> that contains the client information.
            </value>
            <exception cref="T:System.NotImplementedException">
            This property is not implemented.
            </exception>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.UserEndPoint">
            <summary>
            Gets the client endpoint as an IP address and a port number.
            </summary>
            <value>
            A <see cref="T:System.Net.IPEndPoint" /> that contains the client endpoint.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext.WebSocket">
            <summary>
            Gets the WebSocket instance used for two-way communication between client and server.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.WebSocket" />.
            </value>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.WebSocketContext">
            <summary>
            Provides access to the WebSocket connection request objects.
            </summary>
            <remarks>
            The WebSocketContext class is an abstract class.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.WebSocketContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Net.WebSockets.WebSocketContext" /> class.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.CookieCollection">
            <summary>
            Gets the cookies used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains the cookies.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.Headers">
            <summary>
            Gets the HTTP headers used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the HTTP headers.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.IsAuthenticated">
            <summary>
            Gets a value indicating whether the client is authenticated.
            </summary>
            <value>
                <c>true</c> if the client is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.IsLocal">
            <summary>
            Gets a value indicating whether the client connected from the local computer.
            </summary>
            <value>
                <c>true</c> if the client connected from the local computer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.IsSecureConnection">
            <summary>
            Gets a value indicating whether the WebSocket connection is secured.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection is secured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.IsValid">
            <summary>
            Gets a value indicating whether the WebSocket connection request is valid.
            </summary>
            <value>
                <c>true</c> if the WebSocket connection request is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.Origin">
            <summary>
            Gets the value of the Origin header field used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Origin header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.Path">
            <summary>
            Gets the absolute path of the requested WebSocket URI.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the absolute path of the requested WebSocket URI.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.QueryString">
            <summary>
            Gets the collection of query string variables used in the WebSocket opening handshake.
            </summary>
            <value>
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the collection of query string variables.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.RequestUri">
            <summary>
            Gets the WebSocket URI requested by the client.
            </summary>
            <value>
            A <see cref="T:System.Uri" /> that contains the WebSocket URI.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.SecWebSocketKey">
            <summary>
            Gets the value of the Sec-WebSocket-Key header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketKey property provides a part of the information used by the server to prove that it received a valid WebSocket opening handshake.
            </remarks>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Sec-WebSocket-Key header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
            <summary>
            Gets the values of the Sec-WebSocket-Protocol header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketProtocols property indicates the subprotocols of the WebSocket connection.
            </remarks>
            <value>
            An IEnumerable&lt;string&gt; that contains the values of the Sec-WebSocket-Protocol header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
            <summary>
            Gets the value of the Sec-WebSocket-Version header field used in the WebSocket opening handshake.
            </summary>
            <remarks>
            The SecWebSocketVersion property indicates the WebSocket protocol version of the connection.
            </remarks>
            <value>
            A <see cref="T:System.String" /> that contains the value of the Sec-WebSocket-Version header field.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.User">
            <summary>
            Gets the client information (identity, authentication information and security roles).
            </summary>
            <value>
            A <see cref="T:System.Security.Principal.IPrincipal" /> that contains the client information.
            </value>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.WebSocketContext.WebSocket">
            <summary>
            Gets the WebSocket instance used for two-way communication between client and server.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.WebSocket" />.
            </value>
        </member>
        <member name="T:WebSocketSharp.Server.WebSocketServiceManager">
            <summary>
            Manages the collection of <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances.
            </summary>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServiceManager.ActiveIDs">
            <summary>
            Gets the collection of IDs of active <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </summary>
            <value>
            An IEnumerable&lt;string&gt; that contains the collection of IDs
            of active <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServiceManager.Count">
            <summary>
            Gets the number of <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> that contains the number of <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServiceManager.IDs">
            <summary>
            Gets the collection of IDs of <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </summary>
            <value>
            An IEnumerable&lt;string&gt; that contains the collection of IDs
            of <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServiceManager.InactiveIDs">
            <summary>
            Gets the collection of IDs of inactive <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances
            managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </summary>
            <value>
            An IEnumerable&lt;string&gt; that contains the collection of IDs
            of inactive <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.WebSocketServiceManager.KeepClean">
            <summary>
            Gets a value indicating whether the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" /> cleans up
            the inactive <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances periodically.
            </summary>
            <value>
                <c>true</c> if the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" /> cleans up the inactive
            <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances every 60 seconds; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceManager.Broadcast(System.Byte[])">
            <summary>
            Broadcasts the specified array of <see cref="T:System.Byte" /> to the clients of every
            <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </summary>
            <param name="data">
            An array of <see cref="T:System.Byte" /> to broadcast.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceManager.Broadcast(System.String)">
            <summary>
            Broadcasts the specified <see cref="T:System.String" /> to the clients of every
            <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </summary>
            <param name="data">
            A <see cref="T:System.String" /> to broadcast.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceManager.Broadping(System.String)">
            <summary>
            Sends Pings with the specified <see cref="T:System.String" /> to the clients of every
            <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances managed by the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" />.
            </summary>
            <returns>
            A Dictionary&lt;string, bool&gt; that contains the collection of IDs and values indicating
            whether each <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances received a Pong in a time.
            </returns>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to send.
            </param>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceManager.Sweep">
            <summary>
            Cleans up the inactive <see cref="T:WebSocketSharp.Server.WebSocketService" /> instances.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Server.WebSocketServiceManager.TryGetWebSocketService(System.String,WebSocketSharp.Server.WebSocketService@)">
            <summary>
            Tries to get the <see cref="T:WebSocketSharp.Server.WebSocketService" /> associated with the specified ID.
            </summary>
            <returns>
                <c>true</c> if the <see cref="T:WebSocketSharp.Server.WebSocketServiceManager" /> manages the <see cref="T:WebSocketSharp.Server.WebSocketService" />
            with <paramref name="id" />; otherwise, <c>false</c>.
            </returns>
            <param name="id">
            A <see cref="T:System.String" /> that contains an ID to find.
            </param>
            <param name="service">
            When this method returns, contains a <see cref="T:WebSocketSharp.Server.WebSocketService" /> with <paramref name="id" />
            if it is found; otherwise, <see langword="null" />.
            </param>
        </member>
        <member name="T:WebSocketSharp.Server.HttpRequestEventArgs">
            <summary>
            Contains the event data associated with the HTTP request events of the <see cref="T:WebSocketSharp.Server.HttpServer" /> class.
            </summary>
            <remarks>
            An HTTP request event occurs when a <see cref="T:WebSocketSharp.Server.HttpServer" /> instance receives an HTTP request.
            If you want to get the HTTP request objects, you should access the <see cref="P:WebSocketSharp.Server.HttpRequestEventArgs.Request" /> property.
            If you want to get the HTTP response objects to send, you should access the <see cref="P:WebSocketSharp.Server.HttpRequestEventArgs.Response" /> property.
            </remarks>
        </member>
        <member name="P:WebSocketSharp.Server.HttpRequestEventArgs.Request">
            <summary>
            Gets the HTTP request objects sent from a client.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.HttpListenerRequest" /> that contains the HTTP request objects.
            </value>
        </member>
        <member name="P:WebSocketSharp.Server.HttpRequestEventArgs.Response">
            <summary>
            Gets the HTTP response objects to send to the client in response to the client's request.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> that contains the HTTP response objects.
            </value>
        </member>
        <member name="T:WebSocketSharp.CompressionMethod">
            <summary>
            Contains the values of the compression methods used to compress the payload data of the WebSocket Data frame.
            </summary>
            <remarks>
            The <b>CompressionMethod</b> enumeration contains the values of the compression methods defined in
            <see href="http://tools.ietf.org/html/draft-ietf-hybi-permessage-compression-09">Compression Extensions for WebSocket</see>.
            </remarks>
        </member>
        <member name="F:WebSocketSharp.CompressionMethod.NONE">
            <summary>
            Indicates non compression.
            </summary>
        </member>
        <member name="F:WebSocketSharp.CompressionMethod.DEFLATE">
            <summary>
            Indicates using DEFLATE.
            </summary>
        </member>
        <member name="T:WebSocketSharp.WebSocketException">
            <summary>
            Represents the exception that occurred when attempting to perform an operation on the WebSocket connection.
            </summary>
        </member>
        <member name="P:WebSocketSharp.WebSocketException.Code">
            <summary>
            Gets the <see cref="T:WebSocketSharp.CloseStatusCode" /> associated with a <see cref="T:WebSocketSharp.WebSocketException" />.
            </summary>
            <value>
            One of the <see cref="T:WebSocketSharp.CloseStatusCode" /> values that indicates the cause of the exception.
            </value>
        </member>
        <member name="T:WebSocketSharp.WsCredential">
            <summary>
            Provides the credentials for HTTP authentication (Basic/Digest).
            </summary>
        </member>
        <member name="P:WebSocketSharp.WsCredential.Domain">
            <summary>
            Gets the name of the user domain associated with the credentials.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the name of the user domain associated with the credentials.
            Currently, returns the request uri of a WebSocket opening handshake.
            </value>
        </member>
        <member name="P:WebSocketSharp.WsCredential.Password">
            <summary>
            Gets the password for the user name associated with the credentials.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the password for the user name associated with the credentials.
            </value>
        </member>
        <member name="P:WebSocketSharp.WsCredential.UserName">
            <summary>
            Gets the user name associated with the credentials.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the user name associated with the credentials.
            </value>
        </member>
        <member name="T:WebSocketSharp.LogData">
            <summary>
            Represents the log data used by the <see cref="T:WebSocketSharp.Logger" /> class.
            </summary>
        </member>
        <member name="P:WebSocketSharp.LogData.Caller">
            <summary>
            Gets the information of the logging method caller.
            </summary>
            <value>
            A <see cref="T:System.Diagnostics.StackFrame" /> that contains the information of a logging method caller.
            </value>
        </member>
        <member name="P:WebSocketSharp.LogData.Date">
            <summary>
            Gets the date and time when the log data was created.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that contains the date and time when the log data was created.
            </value>
        </member>
        <member name="P:WebSocketSharp.LogData.Level">
            <summary>
            Gets the logging level associated with the log data.
            </summary>
            <value>
            One of the <see cref="T:WebSocketSharp.LogLevel" /> values that indicates the logging level
            associated with the log data.
            </value>
        </member>
        <member name="P:WebSocketSharp.LogData.Message">
            <summary>
            Gets the message of the log data.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains the message of a log data.
            </value>
        </member>
        <member name="M:WebSocketSharp.LogData.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:WebSocketSharp.LogData" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:WebSocketSharp.LogData" />.
            </returns>
        </member>
        <member name="T:WebSocketSharp.LogLevel">
            <summary>
            Contains the values of the logging level.
            </summary>
        </member>
        <member name="F:WebSocketSharp.LogLevel.TRACE">
            <summary>
            Indicates the bottom logging level.
            </summary>
        </member>
        <member name="F:WebSocketSharp.LogLevel.DEBUG">
            <summary>
            Indicates the 2nd logging level from the bottom.
            </summary>
        </member>
        <member name="F:WebSocketSharp.LogLevel.INFO">
            <summary>
            Indicates the 3rd logging level from the bottom.
            </summary>
        </member>
        <member name="F:WebSocketSharp.LogLevel.WARN">
            <summary>
            Indicates the 3rd logging level from the top.
            </summary>
        </member>
        <member name="F:WebSocketSharp.LogLevel.ERROR">
            <summary>
            Indicates the 2nd logging level from the top.
            </summary>
        </member>
        <member name="F:WebSocketSharp.LogLevel.FATAL">
            <summary>
            Indicates the top logging level.
            </summary>
        </member>
        <member name="T:WebSocketSharp.Logger">
            <summary>
            Provides the simple logging functions.
            </summary>
            <remarks>
                <para>
            The Logger class provides some methods that output the logs associated with the each
            <see cref="T:WebSocketSharp.LogLevel" /> values.
            If the <see cref="T:WebSocketSharp.LogLevel" /> value associated with a log is less than the <see cref="P:WebSocketSharp.Logger.Level" />,
            the log can not be outputted.
            </para>
                <para>
            The default output action used by the output methods outputs the log data to the standard output stream
            and writes the same log data to the <see cref="P:WebSocketSharp.Logger.File" /> if it has a valid path.
            </para>
                <para>
            If you want to run custom output action, you can replace the current output action with
            your output action by using the <see cref="M:WebSocketSharp.Logger.SetOutput(System.Action{WebSocketSharp.LogData,System.String})" /> method.
            </para>
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Logger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Logger" /> class.
            </summary>
            <remarks>
            This constructor initializes the current logging level with the <see cref="F:WebSocketSharp.LogLevel.ERROR" /> and
            initializes the path to the log file with <see langword="null" />.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.Logger.#ctor(WebSocketSharp.LogLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Logger" /> class
            with the specified logging <paramref name="level" />.
            </summary>
            <remarks>
            This constructor initializes the path to the log file with <see langword="null" />.
            </remarks>
            <param name="level">
            One of the <see cref="T:WebSocketSharp.LogLevel" /> values to initialize.
            </param>
        </member>
        <member name="M:WebSocketSharp.Logger.#ctor(WebSocketSharp.LogLevel,System.String,System.Action{WebSocketSharp.LogData,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Logger" /> class
            with the specified logging <paramref name="level" />, path to the log <paramref name="file" />
            and <paramref name="output" /> action.
            </summary>
            <param name="level">
            One of the <see cref="T:WebSocketSharp.LogLevel" /> values to initialize.
            </param>
            <param name="file">
            A <see cref="T:System.String" /> that contains a path to the log file to initialize.
            </param>
            <param name="output">
            An <c>Action&lt;LogData, string&gt;</c> delegate that references the method(s) to initialize.
            A <see cref="T:System.String" /> parameter to pass to the method(s) is the value of the <see cref="P:WebSocketSharp.Logger.File" />
            if any.
            </param>
        </member>
        <member name="P:WebSocketSharp.Logger.File">
            <summary>
            Gets or sets the path to the log file.
            </summary>
            <value>
            A <see cref="T:System.String" /> that contains a path to the log file if any.
            </value>
        </member>
        <member name="P:WebSocketSharp.Logger.Level">
            <summary>
            Gets or sets the current logging level.
            </summary>
            <remarks>
            A log associated with a less than the current logging level can not be outputted.
            </remarks>
            <value>
            One of the <see cref="T:WebSocketSharp.LogLevel" /> values that indicates the current logging level.
            </value>
        </member>
        <member name="M:WebSocketSharp.Logger.Debug(System.String)">
            <summary>
            Outputs the specified <see cref="T:System.String" /> as a log with the <see cref="F:WebSocketSharp.LogLevel.DEBUG" />.
            </summary>
            <remarks>
            If the current logging level is greater than the <see cref="F:WebSocketSharp.LogLevel.DEBUG" />,
            this method does not output <paramref name="message" /> as a log.
            </remarks>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to output as a log.
            </param>
        </member>
        <member name="M:WebSocketSharp.Logger.Error(System.String)">
            <summary>
            Outputs the specified <see cref="T:System.String" /> as a log with the <see cref="F:WebSocketSharp.LogLevel.ERROR" />.
            </summary>
            <remarks>
            If the current logging level is greater than the <see cref="F:WebSocketSharp.LogLevel.ERROR" />,
            this method does not output <paramref name="message" /> as a log.
            </remarks>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to output as a log.
            </param>
        </member>
        <member name="M:WebSocketSharp.Logger.Fatal(System.String)">
            <summary>
            Outputs the specified <see cref="T:System.String" /> as a log with the <see cref="F:WebSocketSharp.LogLevel.FATAL" />.
            </summary>
            <remarks>
            If the current logging level is greater than the <see cref="F:WebSocketSharp.LogLevel.FATAL" />,
            this method does not output <paramref name="message" /> as a log.
            </remarks>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to output as a log.
            </param>
        </member>
        <member name="M:WebSocketSharp.Logger.Info(System.String)">
            <summary>
            Outputs the specified <see cref="T:System.String" /> as a log with the <see cref="F:WebSocketSharp.LogLevel.INFO" />.
            </summary>
            <remarks>
            If the current logging level is greater than the <see cref="F:WebSocketSharp.LogLevel.INFO" />,
            this method does not output <paramref name="message" /> as a log.
            </remarks>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to output as a log.
            </param>
        </member>
        <member name="M:WebSocketSharp.Logger.SetOutput(System.Action{WebSocketSharp.LogData,System.String})">
            <summary>
            Replaces the current output action with the specified <paramref name="output" /> action.
            </summary>
            <remarks>
            If <paramref name="output" /> is <see langword="null" />,
            this method replaces the current output action with the default output action.
            </remarks>
            <param name="output">
            An <c>Action&lt;LogData, string&gt;</c> delegate that references the method(s) to set.
            A <see cref="T:System.String" /> parameter to pass to the method(s) is the value of the <see cref="P:WebSocketSharp.Logger.File" />
            if any.
            </param>
        </member>
        <member name="M:WebSocketSharp.Logger.Trace(System.String)">
            <summary>
            Outputs the specified <see cref="T:System.String" /> as a log with the <see cref="F:WebSocketSharp.LogLevel.TRACE" />.
            </summary>
            <remarks>
            If the current logging level is greater than the <see cref="F:WebSocketSharp.LogLevel.TRACE" />,
            this method does not output <paramref name="message" /> as a log.
            </remarks>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to output as a log.
            </param>
        </member>
        <member name="M:WebSocketSharp.Logger.Warn(System.String)">
            <summary>
            Outputs the specified <see cref="T:System.String" /> as a log with the <see cref="F:WebSocketSharp.LogLevel.WARN" />.
            </summary>
            <remarks>
            If the current logging level is greater than the <see cref="F:WebSocketSharp.LogLevel.WARN" />,
            this method does not output <paramref name="message" /> as a log.
            </remarks>
            <param name="message">
            A <see cref="T:System.String" /> that contains a message to output as a log.
            </param>
        </member>
    </members>
</doc>
